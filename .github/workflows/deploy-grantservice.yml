name: Deploy GrantService

on:
  push:
    branches: [ main, Dev, master ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Deploy to VPS
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        key: ${{ secrets.VPS_SSH_KEY }}
        port: ${{ secrets.VPS_PORT || '22' }}
        script: |
          echo "Starting deployment..."
          
          # Остановка сервисов перед обновлением
          echo "Stopping services..."
          sudo systemctl stop grantservice-bot || true
          sudo systemctl stop grantservice-admin || true
          
          # Переход в директорию проекта
          cd /var/GrantService
          
          # Сохранение локальных изменений (если есть)
          git stash clear
          
          # Настройка git для работы без аутентификации
          git config pull.rebase false
          
          # Принудительное обновление из репозитория
          echo "Force updating from GitHub..."
          git fetch --all
          # Определяем ветку и обновляемся из неё
          BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD)
          if [ "$BRANCH_NAME" = "master" ]; then
            git reset --hard origin/master
          else
            git reset --hard origin/Dev
          fi
          git clean -fd
          
          # Удаляем старый файл БД из Git истории (если есть)
          echo "Removing old database file from Git history..."
          rm -f /var/GrantService/data/grantservice.db
          
          # Проверка, что файлы обновлены
          echo "Checking if files are updated..."
          ls -la scripts/
          ls -la .github/workflows/
          
          # Активация виртуального окружения (если используется)
          if [ -f "/var/GrantService/venv/bin/activate" ]; then
              source /var/GrantService/venv/bin/activate
          fi
          
          # Обновление зависимостей для бота
          echo "Installing bot dependencies..."
          cd /var/GrantService/telegram-bot
          pip install -r requirements.txt
          
          # Обновление зависимостей для админки
          echo "Installing admin panel dependencies..."
          cd /var/GrantService/web-admin
          pip install -r requirements.txt
          
          # Инициализация авторизации (БЕЗОПАСНО для продакшн БД)
          echo "Initializing auth roles..."
          cd /var/GrantService
          python3 scripts/init_auth_roles.py || true
          python3 scripts/fix_authorization.py || true
          
          # Запуск сервисов
          echo "Starting services..."
          sudo systemctl start grantservice-bot
          sudo systemctl start grantservice-admin
          
          # Небольшая пауза для запуска
          sleep 5
          
          # Проверка статуса
          echo "Checking service status..."
          sudo systemctl status grantservice-bot --no-pager
          sudo systemctl status grantservice-admin --no-pager
          
          echo "Deployment completed successfully!"