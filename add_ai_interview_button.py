#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∏ AI –ò–Ω—Ç–µ—Ä–≤—å—é –≤ production main.py
PATCH –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–µ–ø–ª–æ—è
"""

import sys

# –ß–∏—Ç–∞–µ–º main.py
with open('/var/GrantService/telegram-bot/main.py', 'r', encoding='utf-8') as f:
    lines = f.readlines()

# Backup
with open('/var/GrantService/telegram-bot/main.py.backup_ai', 'w', encoding='utf-8') as f:
    f.writelines(lines)

# –ù–∞—Ö–æ–¥–∏–º —Å—Ç—Ä–æ–∫—É —Å –∫–Ω–æ–ø–∫–æ–π "–ù–∞—á–∞—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ" –∏ –¥–æ–±–∞–≤–ª—è–µ–º AI –∫–Ω–æ–ø–∫—É
new_lines = []
for i, line in enumerate(lines):
    new_lines.append(line)

    # –ü–æ—Å–ª–µ –∫–Ω–æ–ø–∫–∏ "–ù–∞—á–∞—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ" –¥–æ–±–∞–≤–ª—è–µ–º AI –∫–Ω–æ–ø–∫—É
    if '[InlineKeyboardButton("üìù –ù–∞—á–∞—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ", callback_data="start_interview")]' in line:
        # –î–æ–±–∞–≤–ª—è–µ–º –≤—Ç–æ—Ä—É—é –∫–Ω–æ–ø–∫—É –≤ —Ç–æ–º –∂–µ —Ä—è–¥—É
        indent = len(line) - len(line.lstrip())
        new_lines.append(' ' * indent + '[InlineKeyboardButton("ü§ñ AI –ò–Ω—Ç–µ—Ä–≤—å—é", callback_data="start_ai_interview")],\n')
        print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ AI –∫–Ω–æ–ø–∫–∞ –ø–æ—Å–ª–µ —Å—Ç—Ä–æ–∫–∏ {i+1}")

    # –ü–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ start_interview –¥–æ–±–∞–≤–ª—è–µ–º start_ai_interview
    if 'elif callback_data == "start_interview":' in line:
        # –ü–æ—Å–ª–µ –±–ª–æ–∫–∞ start_interview –Ω–∞–π–¥–µ–º –µ–≥–æ –∫–æ–Ω–µ—Ü –∏ –¥–æ–±–∞–≤–∏–º –Ω–æ–≤—ã–π handler
        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ–∫—É—â–∏–π –±–ª–æ–∫
        pass

# –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ start_ai_interview –ø–µ—Ä–µ–¥ payment
for i, line in enumerate(new_lines):
    if 'elif callback_data == "payment":' in line:
        indent = len(line) - len(line.lstrip())
        handler_code = f'''{' ' * indent}elif callback_data == "start_ai_interview":
{' ' * (indent + 4)}# AI-powered interview —Å –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–º–∏ –∞—É–¥–∏—Ç–∞–º–∏
{' ' * (indent + 4)}try:
{' ' * (indent + 8)}from agents.interactive_interviewer_agent import InteractiveInterviewerAgent
{' ' * (indent + 8)}from data.database.models import GrantServiceDatabase
{' ' * (indent + 8)}
{' ' * (indent + 8)}await query.answer()
{' ' * (indent + 8)}await query.edit_message_text(
{' ' * (indent + 12)}"ü§ñ –ó–∞–ø—É—Å–∫ AI-–∏–Ω—Ç–µ—Ä–≤—å—é...\\n\\n"
{' ' * (indent + 12)}"–≠—Ç–æ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º —Å AI-–∞–Ω–∞–ª–∏–∑–æ–º –æ—Ç–≤–µ—Ç–æ–≤.\\n"
{' ' * (indent + 12)}"–í–∞–º –±—É–¥–µ—Ç –∑–∞–¥–∞–Ω–æ 15 –≤–æ–ø—Ä–æ—Å–æ–≤."
{' ' * (indent + 8)})
{' ' * (indent + 8)}
{' ' * (indent + 8)}# –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—ã—á–Ω—ã–π interview flow –ø–æ–∫–∞
{' ' * (indent + 8)}# TODO: –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª–Ω—ã–π AI flow
{' ' * (indent + 8)}await self.show_question_navigation(query, context, 1)
{' ' * (indent + 4)}except Exception as e:
{' ' * (indent + 8)}logger.error(f"AI Interview error: {{e}}")
{' ' * (indent + 8)}await query.edit_message_text("‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ AI –∏–Ω—Ç–µ—Ä–≤—å—é")
{' ' * (indent + 4)}
'''
        new_lines.insert(i, handler_code)
        print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω handler start_ai_interview –ø–µ—Ä–µ–¥ —Å—Ç—Ä–æ–∫–æ–π {i+1}")
        break

# –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ
with open('/var/GrantService/telegram-bot/main.py', 'w', encoding='utf-8') as f:
    f.writelines(new_lines)

print("‚úÖ main.py –æ–±–Ω–æ–≤–ª–µ–Ω!")
print("üìÑ Backup: /var/GrantService/telegram-bot/main.py.backup_ai")
