#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Добавление философии проекта GrantService в Qdrant базу знаний
"""
import requests
import uuid

QDRANT_HOST = "5.35.88.251"
QDRANT_PORT = 6333
COLLECTION_NAME = "knowledge_sections"

print("=" * 80)
print("ДОБАВЛЕНИЕ ФИЛОСОФИИ ПРОЕКТА GRANTSERVICE В QDRANT")
print("=" * 80)

# Load model
try:
    from sentence_transformers import SentenceTransformer
    print("\n[1/3] Загрузка модели...")
    model = SentenceTransformer("sentence-transformers/paraphrase-multilingual-MiniLM-L12-v2")
    print("      ✅ Модель загружена")
except Exception as e:
    print(f"\n❌ Ошибка загрузки модели: {e}")
    exit(1)

# Project philosophy content - ключевые разделы для агентов
philosophy_sections = [
    {
        "section_name": "Философия проекта GrantService: Главная идея",
        "content": """GrantService - это конвейер качества, превращающий сырую идею в готовую грантовую заявку.

Человек приходит с идеей - хаотичной, эмоциональной, неструктурированной, без понимания рынка и требований.
Фонд президентских грантов (ФПГ) требует доказательной базы, знания рынка, структурированной заявки, обоснованного бюджета.

Задача GrantService: Пройти с человеком весь путь от идеи до готовой заявки, обеспечивая качество на каждом этапе, а не только в конце.

Конвейер: ИДЕЯ → ИНТЕРВЬЮ+АУДИТ → RESEARCH → WRITING → REVIEW → ГОТОВАЯ ЗАЯВКА"""
    },
    {
        "section_name": "Философия проекта: Качество по ходу, не в конце",
        "content": """Ключевой принцип GrantService: Не "сделал → проверил", а "делаю → проверяю одновременно"

Другие системы:
Собрать данные → Написать заявку → Проверить → Обнаружить проблемы → Переделать
Проблема: Пользователь узнает о проблемах ПОСЛЕ того как потратил время.

GrantService:
Блок вопросов → Аудит → Уточнения → Следующий блок
Research → Writing с контекстом → Review → Готово
Преимущество: Качество обеспечивается ПО ХОДУ, а не в конце.

Почему: 70% пользователей бросают процесс на этапе переделывания. Если качество обеспечивается по ходу - переделывать не нужно."""
    },
    {
        "section_name": "Философия проекта: ЭТАП 1 - Интервью и Аудит",
        "content": """ЭТАП 1: ИНТЕРВЬЮ + АУДИТ - Структурирование идеи

Философия: Превратить хаос идеи в структурированную анкету, проверяя качество по ходу.

Процесс:
1. InterviewerAgent задает 15 вопросов (3 блока по 5)
2. АУДИТ ПОСЛЕ КАЖДОГО БЛОКА - не в конце!
3. УТОЧНЯЮЩИЕ ВОПРОСЫ СРАЗУ - если что-то слабо, уточняем сейчас
4. Результат: Анкета (24 поля) + Audit Score (0-100)

Принципы:
- Не допросчик, а консультант - помогаем сформулировать
- Анализ = Аудит одновременно - не ждем конца
- Контекст из базы знаний ФПГ - вопросы учитывают требования фонда (Qdrant)

Метрики успеха: Качество ≥65/100, Завершаемость 70%, UX 3/5 → 4.5/5 (цель)"""
    },
    {
        "section_name": "Философия проекта: ЭТАП 2 - Research контекста",
        "content": """ЭТАП 2: RESEARCH - Контекст реального мира

Философия: Идея существует не в вакууме - она должна быть подкреплена реальным контекстом мира.

ResearcherAgent делает 27 экспертных WebSearch запросов:
- 10 профильных: статистика, кейсы, госпрограммы, нормативная база
- 10 контекстных: проблемы аудитории, исследования, социальный запрос, экономика
- 7 целевых: индикаторы эффективности, бюджет аналогов, партнеры, конкуренты
- +1 специализированный: требования ФПГ из официальных источников

Результат: 117+ источников с цитатами, статистика, кейсы, нормативная база.

Принципы:
- Доказательная база - каждое утверждение подкреплено источником
- Официальные источники - статистика от госструктур
- Контекст экономики и общества - реальное положение в регионе
- Знание конкурентов и партнеров - кто уже делает, с кем объединиться

Зачем: ФПГ не даст деньги проекту без знания рынка, доказательств актуальности."""
    },
    {
        "section_name": "Философия проекта: ЭТАП 3 - Writing и синтез",
        "content": """ЭТАП 3: WRITING - Синтез идеи и контекста

Философия: Заявка = Идея + Контекст реального мира, изложенные языком фонда.

WriterAgent получает:
- Анкету (24 поля) - ЧТО человек хочет сделать
- Research results (27 блоков) - ЧТО говорит реальный мир
- Audit recommendations - ЧТО нужно улучшить

WriterAgent генерирует 9 разделов заявки (форма ФПГ) с требованиями:
- Минимум 10 цитат из research (официальные источники)
- Минимум 2 таблицы (план-график, бюджет)
- Статистика по региону/теме
- Конкретные цифры (не "много детей", а "500+ детей")

Принципы:
- Не придумывать, а синтезировать - все есть в анкете и research
- Язык фонда - профессиональный, но доступный; факты вместо эмоций
- Структура фонда - 9 разделов по форме ФПГ
- Доказательность - каждое утверждение подкреплено цитатой

Результат: Грантовая заявка 15000-20000 символов, готовая к подаче."""
    },
    {
        "section_name": "Философия проекта: ЭТАП 4 - Review и рефлексия",
        "content": """ЭТАП 4: REVIEW - Рефлексия о перспективах

Философия: Честная оценка шансов на одобрение и конкретные рекомендации по улучшению.

ReviewerAgent оценивает заявку по 4 критериям:
1. Доказательная база (40%) - цитаты, статистика, источники
2. Структура и полнота (30%) - все разделы, логика, нет противоречий
3. Индикаторный матчинг (20%) - соответствие требованиям ФПГ
4. Экономическое обоснование (10%) - реалистичность бюджета

Расчет вероятности одобрения:
Approval Probability = 15% + (Weighted Score * 4.375%)
Диапазон: 15% (минимум) - 50% (максимум)

Результат:
- Weighted score (0-10)
- Approval probability (15-50%)
- Сильные стороны, слабые стороны
- Приоритетные улучшения
- Готовность к подаче (yes/no)

Принципы:
- Честность - говорить правду о шансах
- Конкретика - не "плохой бюджет", а "статья X завышена на 30%"
- Приоритизация - что исправить СЕЙЧАС vs что можно потом
- Рефлексия - помочь понять ПОЧЕМУ заявка может быть отклонена"""
    },
    {
        "section_name": "Философия проекта: Доказательная база - основа заявки",
        "content": """Принцип: Каждое утверждение = цитата или статистика

НЕ ТАК: "В регионе много детей не занимаются спортом"

ТАК: "По данным Росстата 2024, в Кемеровской области 23% детей (около 15000 человек) не имеют доступа к спортивным секциям [источник: rosstat.gov.ru/sport-2024]"

Почему: Фонд не верит на слово. Нужны доказательства из официальных источников.

Как обеспечивается:
- ЭТАП 2 (Research): собираем 117+ источников с цитатами
- ЭТАП 3 (Writing): вплетаем минимум 10 цитат в заявку
- ЭТАП 4 (Review): проверяем доказательную базу (40% от оценки)

Research превращает "я хочу помочь детям" в "по данным Росстата 2024, в Кемеровской области 23% детей не имеют доступа к спортивным секциям"."""
    },
    {
        "section_name": "Философия проекта: Контекст реального мира",
        "content": """Принцип: Идея должна быть вписана в реальность

Контекст включает:
- Экономику региона
- Запросы общества
- Госпрограммы
- Существующих конкурентов и партнеров

НЕ ТАК: "Мы хотим открыть клуб, потому что нам нравится стрельба из лука"

ТАК: "В рамках национального проекта 'Спорт - норма жизни' и региональной программы 'Развитие физической культуры', наш проект закрывает дефицит доступа к традиционным видам спорта, выявленный в исследовании НИУ ВШЭ (2024)"

Почему: Фонд финансирует проекты, решающие РЕАЛЬНЫЕ проблемы, а не хобби.

Как обеспечивается:
- ЭТАП 2 (Research): 27 запросов про экономику, общество, конкурентов, партнеров
- ЭТАП 3 (Writing): вплетаем контекст в обоснование актуальности
- ЭТАП 4 (Review): проверяем индикаторный матчинг (20% от оценки)"""
    },
    {
        "section_name": "Философия проекта: Конвейер агентов = конвейер качества",
        "content": """Принцип: Каждый агент - эксперт в своей области

Роли агентов:
- Interviewer: Консультант - помочь сформулировать идею
- Auditor: Контролер качества - найти слабые места СЕЙЧАС
- Researcher: Аналитик рынка - собрать контекст мира
- Writer: Составитель заявки - синтезировать идею + контекст
- Reviewer: Эксперт фонда - оценить шансы на одобрение

Почему конвейер:
Один универсальный агент не может быть экспертом во всем.
Специализация = качество.

Взаимодействие:
Interviewer → передает анкету → Researcher
Researcher → передает research → Writer
Writer → передает заявку → Reviewer
Auditor → встроен в Interviewer, дает обратную связь ПО ХОДУ

Результат: Качество обеспечивается на каждом этапе."""
    },
    {
        "section_name": "Философия проекта: Прозрачность и честность",
        "content": """Принцип: Говорим правду о шансах

Честная оценка:
- Если заявка слабая → "20% шансов, доработайте X, Y, Z"
- Если заявка сильная → "45% шансов, можно подавать"

НЕ обещаем "100% одобрение" - фонд принимает решение сам.

Почему честность важна:
- Доверие пользователя важнее красивых обещаний
- Лучше узнать о проблемах ДО подачи, чем получить отказ
- Review дает выбор: подать сейчас или доработать

Как обеспечивается:
- ЭТАП 4 (Review): расчет вероятности одобрения по формуле
- Диапазон 15-50% (реалистичный, не завышенный)
- Конкретные рекомендации по улучшению
- Приоритизация: что критично, что желательно"""
    }
]

print(f"\n[2/3] Генерация эмбеддингов для {len(philosophy_sections)} разделов...")

# Add sections to Qdrant
points = []
for idx, section in enumerate(philosophy_sections):
    # Generate embedding
    content = section['content']
    embedding = model.encode(content, convert_to_tensor=False)

    # Create point
    point = {
        "id": str(uuid.uuid4()),
        "vector": embedding.tolist(),
        "payload": {
            "section_name": section['section_name'],
            "content": content,
            "source": "GRANTSERVICE_PROJECT_PHILOSOPHY.md",
            "type": "project_philosophy",
            "priority": "P0"  # Критичная информация
        }
    }
    points.append(point)
    print(f"   ✅ {idx+1}/{len(philosophy_sections)}: {section['section_name'][:60]}...")

print(f"\n[3/3] Загрузка в Qdrant ({QDRANT_HOST}:{QDRANT_PORT})...")

# Upload to Qdrant
response = requests.put(
    f"http://{QDRANT_HOST}:{QDRANT_PORT}/collections/{COLLECTION_NAME}/points",
    json={
        "points": points
    }
)

if response.status_code == 200:
    print(f"\n✅ Успешно добавлено {len(points)} разделов философии проекта!")

    # Get updated stats
    response = requests.get(f"http://{QDRANT_HOST}:{QDRANT_PORT}/collections/{COLLECTION_NAME}")
    if response.status_code == 200:
        data = response.json()
        result = data.get('result', {})
        total_points = result.get('points_count', 0)

        print(f"\n📊 Обновленная статистика:")
        print(f"   • Всего разделов в БД: {total_points}")
        print(f"   • Требования ФПГ: 31")
        print(f"   • Философия интервьюера: 5")
        print(f"   • Философия проекта: {len(points)}")
        print(f"   • Статус: {result.get('status', 'unknown')}")
else:
    print(f"\n❌ Ошибка загрузки: {response.status_code}")
    print(response.text)

print("\n" + "=" * 80)
print("ФИЛОСОФИЯ ПРОЕКТА ДОБАВЛЕНА В БАЗУ ЗНАНИЙ")
print("Теперь все агенты могут использовать принципы работы GrantService!")
print("=" * 80)
