#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–æ–∑–¥–∞—Ç—å –∫–æ–ª–ª–µ–∫—Ü–∏—é –¥–ª—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ GrantService
–í—Å–µ –ø–∞—Ä–æ–ª–∏, API keys, –∫–æ–º–∞–Ω–¥—ã, —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ - –≤ –≤–µ–∫—Ç–æ—Ä–Ω–æ–π –ë–î –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞
"""

import sys
from pathlib import Path

# –ü—É—Ç–∏
project_root = Path(__file__).parent.parent.parent.parent.parent / "GrantService"
sys.path.insert(0, str(project_root))

from qdrant_client import QdrantClient
from qdrant_client.models import Distance, VectorParams
import uuid
from sentence_transformers import SentenceTransformer

def create_tech_docs_collection():
    """–°–æ–∑–¥–∞—Ç—å –∫–æ–ª–ª–µ–∫—Ü–∏—é grantservice_tech_docs"""

    print("üîå Connecting to Qdrant...")
    client = QdrantClient(host="5.35.88.251", port=6333)

    collection_name = "grantservice_tech_docs"

    # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ
    collections = client.get_collections().collections
    exists = any(c.name == collection_name for c in collections)

    if exists:
        print(f"‚ö†Ô∏è  –ö–æ–ª–ª–µ–∫—Ü–∏—è '{collection_name}' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        user_input = input("–£–¥–∞–ª–∏—Ç—å –∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å? (y/n): ")
        if user_input.lower() == 'y':
            client.delete_collection(collection_name)
            print(f"üóëÔ∏è  –ö–æ–ª–ª–µ–∫—Ü–∏—è '{collection_name}' —É–¥–∞–ª–µ–Ω–∞")
        else:
            print("‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ")
            return

    # –°–æ–∑–¥–∞—Ç—å –∫–æ–ª–ª–µ–∫—Ü–∏—é
    print(f"üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ '{collection_name}'...")

    client.create_collection(
        collection_name=collection_name,
        vectors_config=VectorParams(
            size=768,  # paraphrase-multilingual-MiniLM-L12-v2
            distance=Distance.COSINE
        )
    )

    print(f"‚úÖ –ö–æ–ª–ª–µ–∫—Ü–∏—è '{collection_name}' —Å–æ–∑–¥–∞–Ω–∞!")

    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    collection_info = client.get_collection(collection_name)
    print(f"\nüìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–ª–ª–µ–∫—Ü–∏–∏:")
    print(f"   –ù–∞–∑–≤–∞–Ω–∏–µ: {collection_name}")
    print(f"   –†–∞–∑–º–µ—Ä–Ω–æ—Å—Ç—å: 768")
    print(f"   –ú–µ—Ç—Ä–∏–∫–∞: COSINE")
    print(f"   –í–µ–∫—Ç–æ—Ä–æ–≤: {collection_info.points_count}")

    print(f"\nüéØ –ì–æ—Ç–æ–≤–æ –∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—é –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤!")
    print(f"   –°–ª–µ–¥—É—é—â–∏–π —à–∞–≥: python add_tech_docs.py")

if __name__ == "__main__":
    create_tech_docs_collection()
