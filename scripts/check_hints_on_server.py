#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥—Å–∫–∞–∑–æ–∫ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
"""

import sqlite3
import os
import sys

def check_hints_on_server():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–¥—Å–∫–∞–∑–∫–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"""
    
    # –ü—É—Ç—å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
    db_path = '/var/GrantService/data/grantservice.db'
    
    print("=" * 60)
    print("–ü–†–û–í–ï–†–ö–ê –ü–û–î–°–ö–ê–ó–û–ö –ù–ê –°–ï–†–í–ï–†–ï")
    print("=" * 60)
    print(f"\n–§–∞–π–ª –ë–î: {db_path}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
    if not os.path.exists(db_path):
        print("‚ùå –§–ê–ô–õ –ë–ê–ó–´ –î–ê–ù–ù–´–• –ù–ï –ù–ê–ô–î–ï–ù –ù–ê –°–ï–†–í–ï–†–ï!")
        print("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä.")
        return
    
    print(f"‚úÖ –§–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Ä–∞–∑–º–µ—Ä: {os.path.getsize(db_path):,} –±–∞–π—Ç")
    
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ
    try:
        conn = sqlite3.connect(db_path)
        conn.row_factory = sqlite3.Row
        cursor = conn.cursor()
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã
        cursor.execute("""
            SELECT question_number, question_text, hint_text, field_name
            FROM interview_questions 
            WHERE is_active = 1 
            ORDER BY question_number
        """)
        
        questions = cursor.fetchall()
        
        print(f"\n–ù–∞–π–¥–µ–Ω–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤: {len(questions)}")
        print("-" * 60)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–π –≤–æ–ø—Ä–æ—Å
        for i, row in enumerate(questions, 1):
            q_num = row['question_number']
            q_text = row['question_text'][:50] + "..." if len(row['question_text']) > 50 else row['question_text']
            hint = row['hint_text']
            field_name = row['field_name']
            
            if hint and hint.strip():
                hint_preview = hint[:80] + "..." if len(hint) > 80 else hint
                print(f"\n–í–æ–ø—Ä–æ—Å {q_num:2}: [+] –ï–°–¢–¨ –ü–û–î–°–ö–ê–ó–ö–ê")
                print(f"  –¢–µ–∫—Å—Ç: {q_text}")
                print(f"  –ü–æ–¥—Å–∫–∞–∑–∫–∞: {hint_preview}")
                print(f"  –ü–æ–ª–µ: {field_name}")
            else:
                print(f"\n–í–æ–ø—Ä–æ—Å {q_num:2}: [-] –ù–ï–¢ –ü–û–î–°–ö–ê–ó–ö–ò!")
                print(f"  –¢–µ–∫—Å—Ç: {q_text}")
                print(f"  –ü–æ–ª–µ: {field_name}")
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        questions_with_hints = sum(1 for row in questions if row['hint_text'] and row['hint_text'].strip())
        questions_without_hints = len(questions) - questions_with_hints
        
        print("\n" + "=" * 60)
        print("–°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
        print("-" * 60)
        print(f"[+] –í–æ–ø—Ä–æ—Å–æ–≤ —Å –ø–æ–¥—Å–∫–∞–∑–∫–∞–º–∏: {questions_with_hints}")
        print(f"[-] –í–æ–ø—Ä–æ—Å–æ–≤ –ë–ï–ó –ø–æ–¥—Å–∫–∞–∑–æ–∫: {questions_without_hints}")
        print(f"[*] –í—Å–µ–≥–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤: {len(questions)}")
        
        conn.close()
        
        # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        print("\n" + "=" * 60)
        print("–†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
        print("-" * 60)
        
        if questions_without_hints > 0:
            print("‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω—ã –≤–æ–ø—Ä–æ—Å—ã –±–µ–∑ –ø–æ–¥—Å–∫–∞–∑–æ–∫!")
            print("   –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ–±–Ω–æ–≤–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.")
        else:
            print("‚úÖ –í—Å–µ –≤–æ–ø—Ä–æ—Å—ã –∏–º–µ—é—Ç –ø–æ–¥—Å–∫–∞–∑–∫–∏!")
            
        if questions_with_hints > 0:
            print("\nüí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ª–∏ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –ø–æ–¥—Å–∫–∞–∑–∫–∏ –≤ Telegram –±–æ—Ç–µ.")
            print("   –ï—Å–ª–∏ –ø–æ–¥—Å–∫–∞–∑–∫–∏ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è, –≤–æ–∑–º–æ–∂–Ω–æ –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –±–æ—Ç–∞.")
        
    except Exception as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø –ö –ë–ê–ó–ï: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    check_hints_on_server()