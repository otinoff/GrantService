#!/bin/bash
# –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ GrantService
# –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä–µ

echo "========================================"
echo "  GrantService Health Check"
echo "  $(date '+%Y-%m-%d %H:%M:%S')"
echo "========================================"
echo ""

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–µ—Ä–≤–∏—Å–∞
check_service() {
    local service_name=$1
    local display_name=$2

    echo -n "üì¶ $display_name: "

    if systemctl is-active --quiet $service_name; then
        echo -e "${GREEN}‚úì Running${NC}"

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º uptime
        uptime=$(systemctl show $service_name --property=ActiveEnterTimestamp --value)
        echo "   ‚îî‚îÄ Started: $uptime"

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 3 —Å—Ç—Ä–æ–∫–∏ –ª–æ–≥–æ–≤
        echo "   ‚îî‚îÄ Recent logs:"
        journalctl -u $service_name -n 3 --no-pager | sed 's/^/      /'

        return 0
    else
        echo -e "${RED}‚úó Not running${NC}"

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏—á–∏–Ω—É –ø–∞–¥–µ–Ω–∏—è
        echo "   ‚îî‚îÄ Last error:"
        journalctl -u $service_name -n 5 --no-pager | sed 's/^/      /'

        return 1
    fi
    echo ""
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ—Ä—Ç–∞
check_port() {
    local port=$1
    local service=$2

    echo -n "üåê Port $port ($service): "

    if netstat -tuln 2>/dev/null | grep -q ":$port " || ss -tuln 2>/dev/null | grep -q ":$port "; then
        echo -e "${GREEN}‚úì Open${NC}"
        return 0
    else
        echo -e "${RED}‚úó Closed${NC}"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞
check_process() {
    local process_name=$1
    local display_name=$2

    echo -n "üîç $display_name process: "

    if pgrep -f "$process_name" > /dev/null; then
        pid=$(pgrep -f "$process_name" | head -1)
        echo -e "${GREEN}‚úì Running (PID: $pid)${NC}"
        return 0
    else
        echo -e "${RED}‚úó Not found${NC}"
        return 1
    fi
}

# ===================================
# –ü—Ä–æ–≤–µ—Ä–∫–∞ systemd —Å–µ—Ä–≤–∏—Å–æ–≤
# ===================================
echo "1Ô∏è‚É£  Systemd Services"
echo "-----------------------------------"

bot_status=0
admin_status=0

check_service "grantservice-bot" "Telegram Bot" || bot_status=1
echo ""
check_service "grantservice-admin" "Streamlit Admin" || admin_status=1
echo ""

# ===================================
# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤
# ===================================
echo "2Ô∏è‚É£  Network Ports"
echo "-----------------------------------"

port_8501=0
port_80=0

check_port "8501" "Streamlit" || port_8501=1
check_port "80" "Nginx" || port_80=1
echo ""

# ===================================
# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
# ===================================
echo "3Ô∏è‚É£  Processes"
echo "-----------------------------------"

check_process "streamlit run" "Streamlit"
check_process "python.*main.py" "Bot"
echo ""

# ===================================
# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤
# ===================================
echo "4Ô∏è‚É£  Critical Files"
echo "-----------------------------------"

files_ok=0

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–ª–∞–≤–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ Streamlit
echo -n "üìÑ Streamlit entry point: "
if [ -f "/var/GrantService/web-admin/app_main.py" ]; then
    echo -e "${GREEN}‚úì Found${NC}"
else
    echo -e "${RED}‚úó Missing: /var/GrantService/web-admin/app_main.py${NC}"
    files_ok=1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–ª–∞–≤–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –±–æ—Ç–∞
echo -n "üìÑ Bot entry point: "
if [ -f "/var/GrantService/telegram-bot/main.py" ]; then
    echo -e "${GREEN}‚úì Found${NC}"
else
    echo -e "${RED}‚úó Missing: /var/GrantService/telegram-bot/main.py${NC}"
    files_ok=1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ë–î
echo -n "üíæ Database: "
if [ -f "/var/GrantService/data/grantservice.db" ]; then
    db_size=$(du -h /var/GrantService/data/grantservice.db | cut -f1)
    echo -e "${GREEN}‚úì Found ($db_size)${NC}"
else
    echo -e "${RED}‚úó Missing: /var/GrantService/data/grantservice.db${NC}"
    files_ok=1
fi

echo ""

# ===================================
# –ü—Ä–æ–≤–µ—Ä–∫–∞ systemd –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
# ===================================
echo "5Ô∏è‚É£  Systemd Configuration"
echo "-----------------------------------"

echo -n "‚öôÔ∏è  Admin service config: "
if [ -f "/etc/systemd/system/grantservice-admin.service" ]; then
    echo -e "${GREEN}‚úì Found${NC}"

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—É—Ç—å –∫ Streamlit
    entry_point=$(grep "ExecStart" /etc/systemd/system/grantservice-admin.service | grep -o "/var/GrantService/[^ ]*\.py")
    echo "   ‚îî‚îÄ Entry point: $entry_point"

    if echo "$entry_point" | grep -q "web-admin/app_main.py"; then
        echo -e "   ‚îî‚îÄ ${GREEN}‚úì Correct path${NC}"
    else
        echo -e "   ‚îî‚îÄ ${RED}‚úó Wrong path! Should be: /var/GrantService/web-admin/app_main.py${NC}"
        echo -e "   ‚îî‚îÄ ${YELLOW}Run: sudo bash /var/GrantService/scripts/update_admin_service.sh${NC}"
    fi
else
    echo -e "${RED}‚úó Missing${NC}"
fi

echo ""

# ===================================
# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
# ===================================
echo "6Ô∏è‚É£  Service Availability"
echo "-----------------------------------"

echo -n "üåê Streamlit HTTP: "
if curl -s -o /dev/null -w "%{http_code}" http://localhost:8501 | grep -q "200\|302"; then
    echo -e "${GREEN}‚úì Responding${NC}"
else
    echo -e "${RED}‚úó Not responding${NC}"
fi

echo ""

# ===================================
# –°–≤–æ–¥–∫–∞
# ===================================
echo "========================================"
echo "  Summary"
echo "========================================"

total_issues=$((bot_status + admin_status + port_8501 + files_ok))

if [ $total_issues -eq 0 ]; then
    echo -e "${GREEN}‚úÖ All systems operational!${NC}"
    exit 0
else
    echo -e "${YELLOW}‚ö†Ô∏è  Found $total_issues issue(s)${NC}"
    echo ""
    echo "Quick fixes:"

    if [ $admin_status -eq 1 ]; then
        echo "  ‚Ä¢ Restart admin: sudo systemctl restart grantservice-admin"
        echo "  ‚Ä¢ Check logs: journalctl -u grantservice-admin -n 50"
        echo "  ‚Ä¢ Update service: sudo bash scripts/update_admin_service.sh"
    fi

    if [ $bot_status -eq 1 ]; then
        echo "  ‚Ä¢ Restart bot: sudo systemctl restart grantservice-bot"
        echo "  ‚Ä¢ Check logs: journalctl -u grantservice-bot -n 50"
    fi

    exit 1
fi
