#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –ø–æ–ª—É—á–µ–Ω–∏—è –≤–æ–ø—Ä–æ—Å–æ–≤ –≤ Telegram –±–æ—Ç–µ
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—é –ë–î
sys.path.append(os.path.join(os.path.dirname(__file__), '..'))

from data.database import get_interview_questions

def debug_questions():
    """–û—Ç–ª–∞–∂–∏–≤–∞–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏–µ –≤–æ–ø—Ä–æ—Å–æ–≤ –∫–∞–∫ –≤ Telegram –±–æ—Ç–µ"""
    
    print("=" * 80)
    print("–û–¢–õ–ê–î–ö–ê –ü–û–õ–£–ß–ï–ù–ò–Ø –í–û–ü–†–û–°–û–í –í TELEGRAM –ë–û–¢–ï")
    print("=" * 80)
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –≤–æ–ø—Ä–æ—Å—ã —Ç–∞–∫ –∂–µ, –∫–∞–∫ –≤ –±–æ—Ç–µ (—Å—Ç—Ä–æ–∫–∞ 89 –≤ main.py)
        questions = get_interview_questions()
        
        print(f"–ù–∞–π–¥–µ–Ω–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤: {len(questions)}")
        print("-" * 80)
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞–∂–¥—ã–π –≤–æ–ø—Ä–æ—Å
        for i, question in enumerate(questions, 1):
            q_num = question.get('question_number', 'N/A')
            q_text = question.get('question_text', 'N/A')
            hint_text = question.get('hint_text', '')
            field_name = question.get('field_name', 'N/A')
            question_type = question.get('question_type', 'N/A')
            
            print(f"\n{i}. –í–æ–ø—Ä–æ—Å {q_num}:")
            print(f"   –¢–µ–∫—Å—Ç: {q_text[:60]}{'...' if len(q_text) > 60 else ''}")
            print(f"   –ü–æ–ª–µ: {field_name}")
            print(f"   –¢–∏–ø: {question_type}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏ (–∫–∞–∫ –≤ —Å—Ç—Ä–æ–∫–µ 335 main.py)
            if hint_text and hint_text.strip():
                hint_preview = hint_text[:80] + "..." if len(hint_text) > 80 else hint_text
                print(f"   –ü–æ–¥—Å–∫–∞–∑–∫–∞: {hint_preview}")
                print(f"   [DEBUG] hint_text —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –Ω–µ –ø—É—Å—Ç–æ–π")
            else:
                print(f"   –ü–æ–¥—Å–∫–∞–∑–∫–∞: [–ù–ï–¢]")
                print(f"   [DEBUG] hint_text –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –ø—É—Å—Ç–æ–π")
                print(f"   [DEBUG] hint_text = {repr(hint_text)}")
                print(f"   [DEBUG] hint_text and hint_text.strip() = {bool(hint_text and hint_text.strip())}")
            
            # –¢–µ—Å—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–∞–∫ –≤ –±–æ—Ç–µ (—Å—Ç—Ä–æ–∫–∞ 335)
            hint_display = f"üí° *–ü–æ–¥—Å–∫–∞–∑–∫–∞:* {hint_text}" if hint_text and hint_text.strip() else ""
            if hint_display:
                print(f"   [–¢–ï–°–¢ –û–¢–û–ë–†–ê–ñ–ï–ù–ò–Ø]: {hint_display[:60]}{'...' if len(hint_display) > 60 else ''}")
            else:
                print(f"   [–¢–ï–°–¢ –û–¢–û–ë–†–ê–ñ–ï–ù–ò–Ø]: [–ü–æ–¥—Å–∫–∞–∑–∫–∞ –Ω–µ –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è]")
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        questions_with_hints = sum(1 for q in questions if q.get('hint_text') and q['hint_text'].strip())
        questions_without_hints = len(questions) - questions_with_hints
        
        print("\n" + "=" * 80)
        print("–°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
        print("-" * 80)
        print(f"–í—Å–µ–≥–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤: {len(questions)}")
        print(f"–í–æ–ø—Ä–æ—Å–æ–≤ —Å –ø–æ–¥—Å–∫–∞–∑–∫–∞–º–∏: {questions_with_hints}")
        print(f"–í–æ–ø—Ä–æ—Å–æ–≤ –ë–ï–ó –ø–æ–¥—Å–∫–∞–∑–æ–∫: {questions_without_hints}")
        
        if questions_without_hints == 0:
            print("\n‚úÖ –í–°–ï –ê–ö–¢–ò–í–ù–´–ï –í–û–ü–†–û–°–´ –ò–ú–ï–Æ–¢ –ü–û–î–°–ö–ê–ó–ö–ò!")
            print("–ï—Å–ª–∏ –≤ Telegram –±–æ—Ç–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –¥—Ä—É–≥–æ–º –º–µ—Å—Ç–µ.")
        else:
            print(f"\n‚ùå –ù–ê–ô–î–ï–ù–û {questions_without_hints} –í–û–ü–†–û–°–û–í –ë–ï–ó –ü–û–î–°–ö–ê–ó–û–ö!")
            print("–ù—É–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.")
            
    except Exception as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    debug_questions()