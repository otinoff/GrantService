#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤–æ–ø—Ä–æ—Å–æ–≤ –∫–∞–∫ –≤ Telegram –±–æ—Ç–µ
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—é –ë–î
sys.path.append(os.path.join(os.path.dirname(__file__), '..'))

from data.database import get_interview_questions

def test_question_display():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤–æ–ø—Ä–æ—Å–æ–≤ –∫–∞–∫ –≤ Telegram –±–æ—Ç–µ"""
    
    print("=" * 80)
    print("–¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –û–¢–û–ë–†–ê–ñ–ï–ù–ò–Ø –í–û–ü–†–û–°–û–í (–∫–∞–∫ –≤ Telegram –±–æ—Ç–µ)")
    print("=" * 80)
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –≤–æ–ø—Ä–æ—Å—ã
        questions = get_interview_questions()
        
        print(f"–ù–∞–π–¥–µ–Ω–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤: {len(questions)}")
        print("\n" + "=" * 80)
        print("–¢–ï–°–¢–û–í–û–ï –û–¢–û–ë–†–ê–ñ–ï–ù–ò–ï –í–û–ü–†–û–°–û–í:")
        print("=" * 80)
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ (–∫–∞–∫ –≤ –±–æ—Ç–µ)
        for i, question in enumerate(questions, 1):
            question_number = question.get('question_number', i)
            question_text = question.get('question_text', '')
            hint_text = question.get('hint_text', '')
            question_type = question.get('question_type', '')
            
            print(f"\n*–í–æ–ø—Ä–æ—Å {question_number} –∏–∑ {len(questions)}*")
            print(f"")
            print(f"{question_text}")
            print(f"")
            
            # –≠—Ç–æ —Ç–æ, —á—Ç–æ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –≤ –±–æ—Ç–µ (—Å—Ç—Ä–æ–∫–∞ 335 –∏–∑ main.py)
            if hint_text and hint_text.strip():
                hint_display = f"üí° *–ü–æ–¥—Å–∫–∞–∑–∫–∞:* {hint_text}"
                print(f"{hint_display}")
                print(f"")
                print(f"[OK] –ü–æ–¥—Å–∫–∞–∑–∫–∞ –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤ Telegram –±–æ—Ç–µ")
            else:
                print(f"[INFO] –ü–æ–¥—Å–∫–∞–∑–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
            
            if question_type:
                type_display = f"üìù *–¢–∏–ø –æ—Ç–≤–µ—Ç–∞:* {question_type}"
                print(f"{type_display}")
            
            print("-" * 40)
        
        # –ü—Ä–æ–≤–µ—Ä–∏–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ –≤–æ–ø—Ä–æ—Å 1
        print("\n" + "=" * 80)
        print("–ü–û–î–†–û–ë–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –í–û–ü–†–û–°–ê 1:")
        print("=" * 80)
        
        if questions:
            q1 = questions[0]
            print(f"question_number: {repr(q1.get('question_number'))}")
            print(f"question_text: {repr(q1.get('question_text'))}")
            print(f"hint_text: {repr(q1.get('hint_text'))}")
            print(f"hint_text is None: {q1.get('hint_text') is None}")
            print(f"hint_text == '': {q1.get('hint_text') == ''}")
            print(f"hint_text and hint_text.strip(): {bool(q1.get('hint_text') and q1.get('hint_text').strip())}")
            
            # –¢–µ—Å—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
            hint_text = q1.get('hint_text', '')
            if hint_text and hint_text.strip():
                display_text = f"üí° *–ü–æ–¥—Å–∫–∞–∑–∫–∞:* {hint_text}"
                print(f"\n[–¢–ï–°–¢ –û–¢–û–ë–†–ê–ñ–ï–ù–ò–Ø]: {display_text}")
            else:
                print(f"\n[–¢–ï–°–¢ –û–¢–û–ë–†–ê–ñ–ï–ù–ò–Ø]: [–ü–æ–¥—Å–∫–∞–∑–∫–∞ –Ω–µ –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è]")
        
    except Exception as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    test_question_display()