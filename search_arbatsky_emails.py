#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–∏—Å–µ–º –æ—Ç –ú–∏—Ö–∞–∏–ª–∞ –ê—Ä–±–∞—Ç—Å–∫–æ–≥–æ —á–µ—Ä–µ–∑ Gmail API
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç OAuth –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏–∑ MCP —Å–µ—Ä–≤–µ—Ä–∞ gsuite
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ MCP —Å–µ—Ä–≤–µ—Ä—É
sys.path.insert(0, 'C:/SnowWhiteAI/MCP_servers/mcp-gsuite/src')

from mcp_gsuite import gauth, gmail
import json

def search_emails_from_arbatsky():
    """–ü–æ–∏—Å–∫ –ø–∏—Å–µ–º –æ—Ç –ú–∏—Ö–∞–∏–ª–∞ –ê—Ä–±–∞—Ç—Å–∫–æ–≥–æ"""

    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø—É—Ç–∏ –∫ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    gauth_file = 'C:/SnowWhiteAI/MCP_servers/mcp-gsuite/.gauth.json'
    accounts_file = 'C:/SnowWhiteAI/MCP_servers/mcp-gsuite/.accounts.json'
    credentials_dir = 'C:/SnowWhiteAI/MCP_servers/mcp-gsuite'

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è gauth
    os.environ['GAUTH_FILE'] = gauth_file
    os.environ['ACCOUNTS_FILE'] = accounts_file
    os.environ['CREDENTIALS_DIR'] = credentials_dir

    # –ü–æ–ª—É—á–∞–µ–º email –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    with open(accounts_file, 'r', encoding='utf-8') as f:
        accounts = json.load(f)
        user_email = accounts['accounts'][0]['email']

    print(f"–ò—Å–ø–æ–ª—å–∑—É–µ–º –∞–∫–∫–∞—É–Ω—Ç: {user_email}")

    # –ü–æ–ª—É—á–∞–µ–º credentials
    try:
        credentials = gauth.get_stored_credentials(user_id=user_email)
        if not credentials:
            print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ credentials")
            print("–ù—É–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é —á–µ—Ä–µ–∑ MCP —Å–µ—Ä–≤–µ—Ä")
            return

        # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–∫–µ–Ω –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        if credentials.access_token_expired:
            print("üîÑ –û–±–Ω–æ–≤–ª—è–µ–º access token...")
            user_info = gauth.get_user_info(credentials=credentials)
            gauth.store_credentials(credentials=credentials, user_id=user_email)

        print("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞")

        # –°–æ–∑–¥–∞–µ–º Gmail —Å–µ—Ä–≤–∏—Å
        gmail_service = gmail.GmailService(credentials=credentials)

        # –ü–æ–∏—Å–∫ –ø–∏—Å–µ–º –æ—Ç –ê—Ä–±–∞—Ç—Å–∫–æ–≥–æ
        print("\nüîç –ò—â—É –ø–∏—Å—å–º–∞ –æ—Ç –ú–∏—Ö–∞–∏–ª–∞ –ê—Ä–±–∞—Ç—Å–∫–æ–≥–æ...")

        # –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –ø–æ–∏—Å–∫–∞
        queries = [
            "from:–ê—Ä–±–∞—Ç—Å–∫–∏–π",
            "from:Arbatsky",
            "from:–ú–∏—Ö–∞–∏–ª",
            "from:arbatsky"
        ]

        all_emails = []
        for query in queries:
            print(f"\n–ü–æ–∏—Å–∫ –ø–æ –∑–∞–ø—Ä–æ—Å—É: {query}")
            try:
                emails = gmail_service.query_emails(
                    query=query,
                    max_results=20
                )

                if emails:
                    print(f"  –ù–∞–π–¥–µ–Ω–æ –ø–∏—Å–µ–º: {len(emails)}")
                    all_emails.extend(emails)
            except Exception as e:
                print(f"  –û—à–∏–±–∫–∞: {e}")

        # –£–±–∏—Ä–∞–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã
        unique_emails = {email['id']: email for email in all_emails}.values()

        print(f"\nüìß –í—Å–µ–≥–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–∏—Å–µ–º: {len(unique_emails)}")
        print("\n" + "="*80)

        # –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        for i, email in enumerate(unique_emails, 1):
            print(f"\n{i}. ID: {email['id']}")
            print(f"   –û—Ç: {email.get('from', 'N/A')}")
            print(f"   –¢–µ–º–∞: {email.get('subject', 'N/A')}")
            print(f"   –î–∞—Ç–∞: {email.get('date', 'N/A')}")

            # –ö—Ä–∞—Ç–∫–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ
            snippet = email.get('snippet', '')
            if snippet:
                print(f"   –ü—Ä–µ–≤—å—é: {snippet[:100]}...")

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ —Ñ–∞–π–ª
        output_file = 'C:/SnowWhiteAI/GrantService/arbatsky_emails.json'
        with open(output_file, 'w', encoding='utf-8') as f:
            json.dump(list(unique_emails), f, ensure_ascii=False, indent=2)

        print(f"\n\nüíæ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: {output_file}")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    search_emails_from_arbatsky()
