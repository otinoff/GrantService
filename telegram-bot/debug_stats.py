 #!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–û—Ç–ª–∞–¥–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ Perplexity API
"""

import sys
import os
sys.path.append('/var/GrantService')

from services.perplexity_service import PerplexityService
from data.database import GrantServiceDatabase

def debug_stats():
    """–û—Ç–ª–∞–¥–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
    print("üîç –û–¢–õ–ê–î–ö–ê –°–¢–ê–¢–ò–°–¢–ò–ö–ò")
    print("=" * 40)
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å
    perplexity_service = PerplexityService()
    db = GrantServiceDatabase()
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ –Ω–∞–ø—Ä—è–º—É—é
    print("\nüìã –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ –Ω–∞–ø—Ä—è–º—É—é...")
    try:
        logs = db.get_researcher_logs(limit=2)
        print(f"  –¢–∏–ø logs: {type(logs)}")
        print(f"  –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {len(logs)}")
        
        if logs:
            first_log = logs[0]
            print(f"  –¢–∏–ø –ø–µ—Ä–≤–æ–≥–æ –ª–æ–≥–∞: {type(first_log)}")
            print(f"  –ö–ª—é—á–∏: {list(first_log.keys())}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º usage_stats
            usage_stats = first_log.get('usage_stats')
            print(f"  –¢–∏–ø usage_stats: {type(usage_stats)}")
            print(f"  –ó–Ω–∞—á–µ–Ω–∏–µ usage_stats: {usage_stats}")
            
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ –ª–æ–≥–æ–≤: {e}")
        import traceback
        print(f"  Traceback: {traceback.format_exc()}")
    
    # 2. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    print("\nüìä –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É...")
    try:
        stats = perplexity_service.get_account_statistics()
        print(f"  –¢–∏–ø stats: {type(stats)}")
        print(f"  –ö–ª—é—á–∏: {list(stats.keys()) if isinstance(stats, dict) else '–ù–ï –°–õ–û–í–ê–†–¨'}")
        
        if isinstance(stats, dict):
            usage_stats = stats.get('usage_stats')
            print(f"  –¢–∏–ø usage_stats: {type(usage_stats)}")
            print(f"  –ó–Ω–∞—á–µ–Ω–∏–µ: {usage_stats}")
        
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
        import traceback
        print(f"  Traceback: {traceback.format_exc()}")

if __name__ == "__main__":
    debug_stats()