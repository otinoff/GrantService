#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ gpt2giga –ø—Ä–æ–∫—Å–∏
"""
import os
import subprocess
import time
import requests
from gpt2giga import GigaChatProxy

def start_gpt2giga_proxy():
    """–ó–∞–ø—É—Å–∫ gpt2giga –ø—Ä–æ–∫—Å–∏"""
    print("üöÄ –ó–∞–ø—É—Å–∫ gpt2giga –ø—Ä–æ–∫—Å–∏...")
    
    # –ü–æ–ª—É—á–∞–µ–º API –∫–ª—é—á
    api_key = os.getenv('GIGACHAT_API_KEY')
    if not api_key:
        print("‚ùå –û—à–∏–±–∫–∞: GIGACHAT_API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        return False
    
    try:
        # –°–æ–∑–¥–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–∫—Å–∏
        proxy = GigaChatProxy(
            gigachat_credentials=api_key,
            host="localhost",
            port=8000
        )
        
        print("‚úÖ gpt2giga –ø—Ä–æ–∫—Å–∏ –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:8000")
        print("üìù –¢–µ–ø–µ—Ä—å CrewAI –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å GigaChat —á–µ—Ä–µ–∑ OpenAI-—Å–æ–≤–º–µ—Å—Ç–∏–º—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–∫—Å–∏ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
        proxy.start()
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–∫—Å–∏: {e}")
        return False

def test_proxy():
    """–¢–µ—Å—Ç –ø—Ä–æ–∫—Å–∏"""
    try:
        response = requests.get("http://localhost:8000/v1/models")
        if response.status_code == 200:
            print("‚úÖ –ü—Ä–æ–∫—Å–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
            return True
        else:
            print(f"‚ùå –ü—Ä–æ–∫—Å–∏ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–∫—Å–∏: {e}")
        return False

if __name__ == "__main__":
    if start_gpt2giga_proxy():
        print("\nüîÑ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–∫—Å–∏...")
        time.sleep(3)
        
        if test_proxy():
            print("\nüéâ gpt2giga –ø—Ä–æ–∫—Å–∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
            print("üí° –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å —Ç–µ—Å—Ç –∞–≥–µ–Ω—Ç–æ–≤")
        else:
            print("\n‚ö†Ô∏è –ü—Ä–æ–∫—Å–∏ –∑–∞–ø—É—â–µ–Ω, –Ω–æ —Ç–µ—Å—Ç –Ω–µ –ø—Ä–æ—à–µ–ª")
    else:
        print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ–∫—Å–∏") 