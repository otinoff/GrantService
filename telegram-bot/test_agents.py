#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–≥–µ–Ω—Ç–æ–≤ —Å Perplexity –∏ GigaChat
"""

import sys
import os
sys.path.append(os.path.join(os.path.dirname(os.path.abspath(__file__)), '..'))

from data.database import GrantServiceDatabase as Database
from agents.researcher_agent import ResearcherAgent
from agents.writer_agent import WriterAgent
from agents.auditor_agent import AuditorAgent

def test_agents():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –∞–≥–µ–Ω—Ç–æ–≤"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–≥–µ–Ω—Ç–æ–≤ GrantService")
    print("=" * 50)
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        db = Database()
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–∞")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º Researcher (Perplexity)
        print("\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º Researcher Agent (Perplexity)...")
        researcher = ResearcherAgent(db)
        if researcher.crewai_agent:
            print("‚úÖ Researcher Agent —Å–æ–∑–¥–∞–Ω —Å Perplexity")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è Researcher Agent")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º Writer (GigaChat)
        print("\n‚úçÔ∏è –¢–µ—Å—Ç–∏—Ä—É–µ–º Writer Agent (GigaChat)...")
        writer = WriterAgent(db)
        if writer.crewai_agent:
            print("‚úÖ Writer Agent —Å–æ–∑–¥–∞–Ω —Å GigaChat")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è Writer Agent")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º Auditor (GigaChat)
        print("\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º Auditor Agent (GigaChat)...")
        auditor = AuditorAgent(db)
        if auditor.crewai_agent:
            print("‚úÖ Auditor Agent —Å–æ–∑–¥–∞–Ω —Å GigaChat")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è Auditor Agent")
        
        print("\n" + "=" * 50)
        print("üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    test_agents() 