#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Perplexity —Å–µ—Ä–≤–∏—Å–∞
"""

import sys
import os
sys.path.append(os.path.join(os.path.dirname(os.path.abspath(__file__)), '..'))

from services.perplexity_service import PerplexityService
sys.path.append('/var/GrantService/agents')
from researcher_agent import ResearcherAgent
from data.database import GrantServiceDatabase as Database

def test_perplexity_service():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Perplexity —Å–µ—Ä–≤–∏—Å–∞"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Perplexity —Å–µ—Ä–≤–∏—Å–∞")
    print("=" * 50)
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å
        perplexity = PerplexityService()
        print("‚úÖ Perplexity —Å–µ—Ä–≤–∏—Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        
        # –¢–µ—Å—Ç 1: –ü–æ–∏—Å–∫ –≥—Ä–∞–Ω—Ç–æ–≤
        print("\nüîç –¢–µ—Å—Ç 1: –ü–æ–∏—Å–∫ –≥—Ä–∞–Ω—Ç–æ–≤...")
        result = perplexity.search_grants(
            query="–≥—Ä–∞–Ω—Ç—ã –¥–ª—è –º–∞–ª–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞",
            region="–ö–µ–º–µ—Ä–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
            budget_range="–¥–æ 500 000 —Ä—É–±–ª–µ–π"
        )
        
        if result.get('status') == 'success':
            print("‚úÖ –ü–æ–∏—Å–∫ –≥—Ä–∞–Ω—Ç–æ–≤ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ")
            print(f"üìù –ù–∞–π–¥–µ–Ω–æ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤: {len(result.get('sources', []))}")
            print(f"‚ùì –°–≤—è–∑–∞–Ω–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤: {len(result.get('related_questions', []))}")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —á–∞—Å—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
            grants_info = result.get('grants_info', '')
            if grants_info:
                print(f"üìÑ –†–µ–∑—É–ª—å—Ç–∞—Ç (–ø–µ—Ä–≤—ã–µ 300 —Å–∏–º–≤–æ–ª–æ–≤): {grants_info[:300]}...")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞: {result.get('error')}")
        
        # –¢–µ—Å—Ç 2: –°–≤—è–∑–∞–Ω–Ω—ã–µ –≥—Ä–∞–Ω—Ç—ã
        print("\nüîó –¢–µ—Å—Ç 2: –ü–æ–∏—Å–∫ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –≥—Ä–∞–Ω—Ç–æ–≤...")
        related_result = perplexity.get_related_grants("–º–∞–ª—ã–π –±–∏–∑–Ω–µ—Å")
        
        if related_result.get('status') == 'success':
            print("‚úÖ –°–≤—è–∑–∞–Ω–Ω—ã–µ –≥—Ä–∞–Ω—Ç—ã –Ω–∞–π–¥–µ–Ω—ã")
            print(f"üìù –ò—Å—Ç–æ—á–Ω–∏–∫–æ–≤: {len(related_result.get('sources', []))}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –≥—Ä–∞–Ω—Ç–æ–≤: {related_result.get('error')}")
        
        # –¢–µ—Å—Ç 3: –ê–Ω–∞–ª–∏–∑ –≥—Ä–∞–Ω—Ç–∞
        print("\nüìä –¢–µ—Å—Ç 3: –ê–Ω–∞–ª–∏–∑ –≥—Ä–∞–Ω—Ç–∞...")
        grant_info = "–ì—Ä–∞–Ω—Ç –Ω–∞ —Ä–∞–∑–≤–∏—Ç–∏–µ –º–∞–ª–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞, —Ä–∞–∑–º–µ—Ä –¥–æ 500 000 —Ä—É–±–ª–µ–π"
        analysis_result = perplexity.get_grant_analysis(grant_info)
        
        if analysis_result.get('status') == 'success':
            print("‚úÖ –ê–Ω–∞–ª–∏–∑ –≥—Ä–∞–Ω—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω")
            analysis = analysis_result.get('analysis', '')
            if analysis:
                print(f"üìÑ –ê–Ω–∞–ª–∏–∑ (–ø–µ—Ä–≤—ã–µ 200 —Å–∏–º–≤–æ–ª–æ–≤): {analysis[:200]}...")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞: {analysis_result.get('error')}")
        
        print("\n" + "=" * 50)
        print("üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Perplexity —Å–µ—Ä–≤–∏—Å–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        import traceback
        traceback.print_exc()

def test_researcher_agent():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Researcher Agent —Å Perplexity"""
    print("\nü§ñ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Researcher Agent")
    print("=" * 50)
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏ –∞–≥–µ–Ω—Ç–∞
        db = Database()
        researcher = ResearcherAgent(db)
        print("‚úÖ Researcher Agent –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Perplexity
        print("\nüîó –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Perplexity...")
        connection_test = researcher.test_perplexity_connection()
        
        if connection_test.get('status') == 'success':
            print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Perplexity —Ä–∞–±–æ—Ç–∞–µ—Ç")
            usage = connection_test.get('usage', {})
            if usage:
                print(f"üìä –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ç–æ–∫–µ–Ω–æ–≤: {usage}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {connection_test.get('message')}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –¥–∞–Ω–Ω—ã—Ö
        print("\nüìù –¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö...")
        test_data = {
            'user_answers': {
                'project_type': '–º–∞–ª—ã–π –±–∏–∑–Ω–µ—Å',
                'region': '–ö–µ–º–µ—Ä–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å',
                'budget': '–¥–æ 500 000 —Ä—É–±–ª–µ–π',
                'experience': '3-5 –ª–µ—Ç'
            },
            'project_description': '–†–∞–∑–≤–∏—Ç–∏–µ –º–∞–ª–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞ –≤ —Ä–µ–≥–∏–æ–Ω–µ'
        }
        
        result = researcher.process(test_data)
        
        if result.get('status') == 'success':
            print("‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
            print(f"üîç –ü–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å: {result.get('search_query', '')}")
            print(f"üìÑ –ù–∞–π–¥–µ–Ω–æ –≥—Ä–∞–Ω—Ç–æ–≤: {len(result.get('found_grants', ''))} —Å–∏–º–≤–æ–ª–æ–≤")
            print(f"üîó –°–≤—è–∑–∞–Ω–Ω—ã—Ö –≥—Ä–∞–Ω—Ç–æ–≤: {len(result.get('related_grants', ''))} —Å–∏–º–≤–æ–ª–æ–≤")
            print(f"üìö –ò—Å—Ç–æ—á–Ω–∏–∫–æ–≤: {len(result.get('sources', []))}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏: {result.get('message')}")
        
        print("\n" + "=" * 50)
        print("üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Researcher Agent –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    test_perplexity_service()
    test_researcher_agent() 