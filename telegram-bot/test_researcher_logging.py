 #!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è Researcher Agent
"""

import sys
import os
sys.path.append(os.path.join(os.path.dirname(os.path.abspath(__file__)), '..'))

sys.path.append('/var/GrantService/agents')
from researcher_agent import ResearcherAgent
from data.database import GrantServiceDatabase as Database

def test_researcher_logging():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è Researcher Agent"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è Researcher Agent")
    print("=" * 50)
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏ –∞–≥–µ–Ω—Ç–∞
        db = Database()
        researcher = ResearcherAgent(db)
        print("‚úÖ Researcher Agent –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        
        # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        test_data = {
            'user_answers': {
                'project_type': '–º–∞–ª—ã–π –±–∏–∑–Ω–µ—Å',
                'region': '–ö–µ–º–µ—Ä–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å',
                'budget': '–¥–æ 500 000 —Ä—É–±–ª–µ–π',
                'experience': '3-5 –ª–µ—Ç',
                'team_size': '5-10 —á–µ–ª–æ–≤–µ–∫'
            },
            'project_description': '–†–∞–∑–≤–∏—Ç–∏–µ –º–∞–ª–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞ –≤ —Ä–µ–≥–∏–æ–Ω–µ —á–µ—Ä–µ–∑ –≤–Ω–µ–¥—Ä–µ–Ω–∏–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π',
            'user_id': 1,
            'session_id': 1
        }
        
        print("\nüìù –í—ã–ø–æ–ª–Ω—è–µ–º –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ —Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º...")
        result = researcher.process(test_data)
        
        if result.get('status') == 'success':
            print("‚úÖ –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ")
            print(f"üìä –í—ã–ø–æ–ª–Ω–µ–Ω–æ –∑–∞–ø—Ä–æ—Å–æ–≤: {result.get('queries_count', 0)}")
            print(f"üí∞ –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: ${result.get('total_cost', 0):.4f}")
            print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ID: {result.get('user_id', 0)}")
            print(f"üÜî –°–µ—Å—Å–∏—è ID: {result.get('session_id', 0)}")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
            results = result.get('results', [])
            for i, res in enumerate(results, 1):
                print(f"\nüìã –†–µ–∑—É–ª—å—Ç–∞—Ç {i}: {res['prompt_name']}")
                print(f"üîç –ó–∞–ø—Ä–æ—Å: {res['query'][:100]}...")
                print(f"üìÑ –û—Ç–≤–µ—Ç: {res['result'][:200]}...")
                print(f"üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: ${res['cost']:.4f}")
                print(f"üìö –ò—Å—Ç–æ—á–Ω–∏–∫–æ–≤: {len(res['sources'])}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ –≤ –±–∞–∑–µ
            print("\nüìä –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
            logs = db.get_researcher_logs(user_id=1, limit=10)
            
            if logs:
                print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(logs)} –∑–∞–ø–∏—Å–µ–π –≤ –ª–æ–≥–∞—Ö")
                for log in logs:
                    print(f"üìù –õ–æ–≥ ID {log['id']}: {log['status']} - ${log['cost']:.4f}")
            else:
                print("‚ùå –õ–æ–≥–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            print("\nüìà –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É...")
            stats = db.get_researcher_statistics(30)
            print(f"üìä –í—Å–µ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤: {stats.get('total_queries', 0)}")
            print(f"‚úÖ –£—Å–ø–µ—à–Ω—ã—Ö: {stats.get('successful_queries', 0)}")
            print(f"üí∞ –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: ${stats.get('total_cost', 0):.4f}")
            print(f"üìà –ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: {stats.get('success_rate', 0):.1f}%")
            
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è: {result.get('message')}")
        
        print("\n" + "=" * 50)
        print("üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    test_researcher_logging()