#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–≥–µ–Ω—Ç–∞-–∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—è —Å –ø—Ä–æ–º–ø—Ç–∞–º–∏ –∏–∑ –ë–î
"""

import sys
import os
sys.path.append('/var/GrantService')

from data.database import GrantServiceDatabase
from services.perplexity_service import PerplexityService

def test_researcher_with_db():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–≥–µ–Ω—Ç–∞-–∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—è —Å –ø—Ä–æ–º–ø—Ç–∞–º–∏ –∏–∑ –ë–î"""
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ë–î –∏ —Å–µ—Ä–≤–∏—Å
    db = GrantServiceDatabase()
    perplexity_service = PerplexityService()
    
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–≥–µ–Ω—Ç–∞-–∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—è —Å –ø—Ä–æ–º–ø—Ç–∞–º–∏ –∏–∑ –ë–î")
    print("=" * 60)
    
    # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ–º–ø—Ç—ã –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ë–î
    researcher_prompts = db.get_agent_prompts('researcher')
    
    if not researcher_prompts:
        print("‚ùå –ü—Ä–æ–º–ø—Ç—ã –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –ë–î")
        return
    
    print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(researcher_prompts)} –ø—Ä–æ–º–ø—Ç–æ–≤ –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—è")
    print()
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∏–º–∏—Ç–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä–≤—å—é)
    test_user_data = {
        'project_name': '–¶–∏—Ñ—Ä–æ–≤–æ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –¥–ª—è —Å–µ–ª—å—Å–∫–∏—Ö —à–∫–æ–ª',
        'project_description': '–°–æ–∑–¥–∞–Ω–∏–µ –æ–Ω–ª–∞–π–Ω-–ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –¥–ª—è –æ–±—É—á–µ–Ω–∏—è —à–∫–æ–ª—å–Ω–∏–∫–æ–≤ –≤ —Å–µ–ª—å—Å–∫–æ–π –º–µ—Å—Ç–Ω–æ—Å—Ç–∏ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π',
        'target_audience': '–®–∫–æ–ª—å–Ω–∏–∫–∏ 5-11 –∫–ª–∞—Å—Å–æ–≤ –≤ —Å–µ–ª—å—Å–∫–∏—Ö —Ä–∞–π–æ–Ω–∞—Ö',
        'region': '–ö–µ–º–µ—Ä–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å',
        'budget': '5000000',
        'duration': '24 –º–µ—Å—è—Ü–∞'
    }
    
    print("üìã –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç–∞:")
    for key, value in test_user_data.items():
        print(f"  {key}: {value}")
    print()
    
    # –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ task –ø—Ä–æ–º–ø—Ç—ã
    task_prompts = [p for p in researcher_prompts if p['prompt_type'] == 'task']
    
    print(f"üéØ –ù–∞–π–¥–µ–Ω–æ {len(task_prompts)} task –ø—Ä–æ–º–ø—Ç–æ–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:")
    for i, prompt in enumerate(task_prompts, 1):
        print(f"  {i}. {prompt['prompt_name']}")
    print()
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –∫–∞–∂–¥—ã–π task –ø—Ä–æ–º–ø—Ç
    for i, prompt in enumerate(task_prompts, 1):
        print(f"üöÄ –í—ã–ø–æ–ª–Ω—è–µ–º –ø—Ä–æ–º–ø—Ç {i}: {prompt['prompt_name']}")
        print("-" * 40)
        
        # –°—Ç—Ä–æ–∏–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–æ–º–ø—Ç–∞ –∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        query = f"""
{prompt['prompt_content']}

–ö–æ–Ω—Ç–µ–∫—Å—Ç –ø—Ä–æ–µ–∫—Ç–∞:
- –ù–∞–∑–≤–∞–Ω–∏–µ: {test_user_data['project_name']}
- –û–ø–∏—Å–∞–Ω–∏–µ: {test_user_data['project_description']}
- –¶–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è: {test_user_data['target_audience']}
- –†–µ–≥–∏–æ–Ω: {test_user_data['region']}
- –ë—é–¥–∂–µ—Ç: {test_user_data['budget']} —Ä—É–±.
- –°—Ä–æ–∫: {test_user_data['duration']}

–ü—Ä–æ–≤–µ–¥–∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –ø–æ –¥–∞–Ω–Ω–æ–º—É –ø—Ä–æ–µ–∫—Ç—É.
"""
        
        print(f"üìù –ó–∞–ø—Ä–æ—Å –∫ Perplexity:")
        print(query[:200] + "..." if len(query) > 200 else query)
        print()
        
        try:
            # –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ Perplexity
            response = perplexity_service.search_grants(query)
            
            print(f"‚úÖ –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω ({len(response)} —Å–∏–º–≤–æ–ª–æ–≤)")
            print("üìÑ –û—Ç–≤–µ—Ç:")
            print(response[:500] + "..." if len(response) > 500 else response)
            print()
            
            # –õ–æ–≥–∏—Ä—É–µ–º –≤ –ë–î
            log_data = {
                'user_id': 999,  # —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
                'session_id': 999,  # —Ç–µ—Å—Ç–æ–≤–∞—è —Å–µ—Å—Å–∏—è
                'query_text': query,
                'perplexity_response': response,
                'sources': 'Perplexity API',
                'usage_stats': 'test_query',
                'cost': 0.01,  # –ø—Ä–∏–º–µ—Ä–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å
                'status': 'success',
                'error_message': None
            }
            
            db.log_researcher_query(**log_data)
            print(f"üíæ –ó–∞–ø—Ä–æ—Å –∑–∞–ª–æ–≥–∏—Ä–æ–≤–∞–Ω –≤ –ë–î")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞: {e}")
            
            # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
            log_data = {
                'user_id': 999,
                'session_id': 999,
                'query_text': query,
                'perplexity_response': None,
                'sources': None,
                'usage_stats': 'error',
                'cost': 0,
                'status': 'error',
                'error_message': str(e)
            }
            
            db.log_researcher_query(**log_data)
        
        print("=" * 60)
        print()
    
    print("üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("üìä –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ –≤ —Ä–∞–∑–¥–µ–ª–µ '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—è'")

if __name__ == "__main__":
    test_researcher_with_db() 