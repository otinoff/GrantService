 #!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ª–æ–≥–∞—Ö Perplexity API
"""

import sys
import os
sys.path.append('/var/GrantService')

from data.database import GrantServiceDatabase
from services.perplexity_service import PerplexityService

def update_existing_costs():
    """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ª–æ–≥–∞—Ö"""
    print("üîÑ –û–ë–ù–û–í–õ–ï–ù–ò–ï –°–¢–û–ò–ú–û–°–¢–ò –í –õ–û–ì–ê–•")
    print("=" * 50)
    
    db = GrantServiceDatabase()
    perplexity_service = PerplexityService()
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ª–æ–≥–∏
    logs = db.get_researcher_logs(limit=1000)
    print(f"üìã –ù–∞–π–¥–µ–Ω–æ –ª–æ–≥–æ–≤: {len(logs)}")
    
    updated_count = 0
    total_cost = 0.0
    
    for log in logs:
        log_id = log['id']
        current_cost = log['cost']
        usage_stats = log['usage_stats']
        
        # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å
        correct_cost = perplexity_service._calculate_cost(usage_stats)
        
        if abs(current_cost - correct_cost) > 0.000001:  # –ï—Å–ª–∏ —Å—Ç–æ–∏–º–æ—Å—Ç—å –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è
            print(f"  üîÑ –õ–æ–≥ {log_id}: ${current_cost:.6f} ‚Üí ${correct_cost:.6f}")
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤ –ë–î
            try:
                with db.connect() as conn:
                    cursor = conn.cursor()
                    cursor.execute(
                        "UPDATE researcher_logs SET cost = ? WHERE id = ?",
                        (correct_cost, log_id)
                    )
                    conn.commit()
                
                updated_count += 1
                total_cost += correct_cost
                
            except Exception as e:
                print(f"    ‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {e}")
        else:
            total_cost += current_cost
    
    print(f"\n‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ –ª–æ–≥–æ–≤: {updated_count}")
    print(f"üí∞ –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: ${total_cost:.6f}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    print("\nüìä –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è...")
    stats = perplexity_service.get_account_statistics()
    print(f"  - –ó–∞–ø—Ä–æ—Å–æ–≤: {stats['usage_stats']['total_queries']}")
    print(f"  - –†–∞—Å—Ö–æ–¥—ã: ${stats['usage_stats']['total_cost']:.6f}")
    
    return updated_count

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –≤ –ª–æ–≥–∞—Ö")
    
    response = input("\n–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ? (y/N): ")
    if response.lower() in ['y', 'yes', '–¥–∞']:
        update_existing_costs()
    else:
        print("‚ùå –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")