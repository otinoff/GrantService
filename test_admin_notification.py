#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
"""

import os
import sys
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç–∏ –∫ –º–æ–¥—É–ª—è–º
sys.path.append(os.path.dirname(__file__))
sys.path.append(os.path.join(os.path.dirname(__file__), 'telegram-bot', 'utils'))
sys.path.append(os.path.join(os.path.dirname(__file__), 'data'))

def test_notification():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤"""

    print("=" * 60)
    print("–¢–ï–°–¢ –û–¢–ü–†–ê–í–ö–ò –£–í–ï–î–û–ú–õ–ï–ù–ò–ô –í –ì–†–£–ü–ü–£ –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–û–í")
    print("=" * 60)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞
    bot_token = os.getenv('TELEGRAM_BOT_TOKEN')
    if not bot_token:
        # –ü—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞
        config_path = os.path.join(os.path.dirname(__file__), 'config', '.env')
        if os.path.exists(config_path):
            print(f"üìÅ –ó–∞–≥—Ä—É–∂–∞—é —Ç–æ–∫–µ–Ω –∏–∑ {config_path}")
            with open(config_path, 'r', encoding='utf-8') as f:
                for line in f:
                    if line.startswith('TELEGRAM_BOT_TOKEN='):
                        bot_token = line.split('=', 1)[1].strip().strip('"\'')
                        os.environ['TELEGRAM_BOT_TOKEN'] = bot_token
                        break

    if not bot_token:
        print("‚ùå –û–®–ò–ë–ö–ê: –ù–µ –Ω–∞–π–¥–µ–Ω TELEGRAM_BOT_TOKEN")
        print("–£–∫–∞–∂–∏—Ç–µ —Ç–æ–∫–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ –≤ config/.env")
        return False

    print(f"‚úÖ –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–∞–π–¥–µ–Ω: ...{bot_token[-10:]}")
    print()

    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    try:
        from admin_notifications import AdminNotifier
        print("‚úÖ –ú–æ–¥—É–ª—å admin_notifications —É—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª—è admin_notifications: {e}")
        return False

    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏
    test_application = {
        'application_number': f'TEST-{datetime.now().strftime("%Y%m%d-%H%M%S")}',
        'title': '–¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç: –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –≥—Ä–∞–Ω—Ç–æ–≤—ã—Ö –∑–∞—è–≤–æ–∫',
        'grant_fund': '–§–æ–Ω–¥ –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç—Å–∫–∏—Ö –≥—Ä–∞–Ω—Ç–æ–≤',
        'requested_amount': 1500000,
        'project_duration': 12,
        'created_at': datetime.now().isoformat(),
        'summary': '–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.'
    }

    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    test_user = {
        'telegram_id': 123456789,
        'username': 'test_user',
        'first_name': '–¢–µ—Å—Ç–æ–≤—ã–π',
        'last_name': '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'
    }

    print("üìã –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏:")
    print(f"   –ù–æ–º–µ—Ä: {test_application['application_number']}")
    print(f"   –ù–∞–∑–≤–∞–Ω–∏–µ: {test_application['title']}")
    print(f"   –§–æ–Ω–¥: {test_application['grant_fund']}")
    print(f"   –°—É–º–º–∞: {test_application['requested_amount']:,} ‚ÇΩ")
    print()

    print("üë§ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")
    print(f"   –ò–º—è: {test_user['first_name']} {test_user['last_name']}")
    print(f"   Username: @{test_user['username']}")
    print(f"   Telegram ID: {test_user['telegram_id']}")
    print()

    # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –Ω–æ—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞
    try:
        notifier = AdminNotifier(bot_token)
        print("‚úÖ AdminNotifier —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        print(f"üì¢ –¶–µ–ª–µ–≤–∞—è –≥—Ä—É–ø–ø–∞: {notifier.admin_group_id}")
        print()
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è AdminNotifier: {e}")
        return False

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    print("üì§ –û—Ç–ø—Ä–∞–≤–ª—è—é —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ...")
    try:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é
        success = notifier.send_notification_sync(test_application, test_user)

        if success:
            print("‚úÖ –£–°–ü–ï–•: –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –≥—Ä—É–ø–ø—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤!")
            print()
            print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≥—Ä—É–ø–ø—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è.")
            return True
        else:
            print("‚ùå –û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ")
            print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ:")
            print("1. –ü—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å ID –≥—Ä—É–ø–ø—ã: -4930683040")
            print("2. –î–æ–±–∞–≤–ª–µ–Ω –ª–∏ –±–æ—Ç –≤ –≥—Ä—É–ø–ø—É –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä")
            print("3. –ï—Å—Ç—å –ª–∏ —É –±–æ—Ç–∞ –ø—Ä–∞–≤–∞ –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π")
            return False

    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ: {e}")
        print()
        print("–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
        print("1. –ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω –±–æ—Ç–∞")
        print("2. –ë–æ—Ç –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –≥—Ä—É–ø–ø—É")
        print("3. –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π ID –≥—Ä—É–ø–ø—ã")
        print("4. –ü—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ç–µ–≤—ã–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º")
        return False


def test_database_integration():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö"""

    print("\n" + "=" * 60)
    print("–¢–ï–°–¢ –ò–ù–¢–ï–ì–†–ê–¶–ò–ò –° –ë–ê–ó–û–ô –î–ê–ù–ù–´–•")
    print("=" * 60)

    try:
        from database.models import Database
        db = Database()
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–∞")

        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞—è–≤–∫—É
        test_data = {
            'title': f'–¢–µ—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π {datetime.now().strftime("%H:%M:%S")}',
            'grant_fund': '–¢–µ—Å—Ç–æ–≤—ã–π —Ñ–æ–Ω–¥',
            'requested_amount': 100000,
            'project_duration': 6,
            'summary': '–¢–µ—Å—Ç–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π',
            'admin_user': 'test_script'
        }

        print("üíæ –°–æ—Ö—Ä–∞–Ω—è—é —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞—è–≤–∫—É –≤ –ë–î...")
        app_number = db.save_grant_application(test_data)

        if app_number:
            print(f"‚úÖ –ó–∞—è–≤–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: {app_number}")
            print("‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏")
            return True
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∑–∞—è–≤–∫—É")
            return False

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ä–∞–±–æ—Ç—ã —Å –ë–î: {e}")
        return False


if __name__ == "__main__":
    print("\nüöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π\n")

    # –¢–µ—Å—Ç 1: –ü—Ä—è–º–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    test1_result = test_notification()

    # –¢–µ—Å—Ç 2: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –ë–î
    test2_result = test_database_integration()

    # –ò—Ç–æ–≥–∏
    print("\n" + "=" * 60)
    print("–ò–¢–û–ì–ò –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø")
    print("=" * 60)
    print(f"–ü—Ä—è–º–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞: {'‚úÖ –£—Å–ø–µ—Ö' if test1_result else '‚ùå –û—à–∏–±–∫–∞'}")
    print(f"–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –ë–î: {'‚úÖ –£—Å–ø–µ—Ö' if test2_result else '‚ùå –û—à–∏–±–∫–∞'}")
    print()

    if test1_result and test2_result:
        print("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
        print("–°–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ.")
    else:
        print("‚ö†Ô∏è –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã, —Ç—Ä–µ–±—É—é—â–∏–µ –≤–Ω–∏–º–∞–Ω–∏—è.")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö –≤—ã—à–µ.")