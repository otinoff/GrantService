#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –∞–Ω–∫–µ—Ç –∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π
"""

import sys
import os
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append('/var/GrantService')

from data.database import db
from agents.researcher_agent import ResearcherAgent

def test_anketa_creation():
    """–¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∞–Ω–∫–µ—Ç—ã"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –∞–Ω–∫–µ—Ç—ã...")
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_data = {
        "telegram_id": 123456789,
        "username": "test_user",
        "first_name": "–¢–µ—Å—Ç",
        "last_name": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
    }
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∞–Ω–∫–µ—Ç—ã
    anketa_data = {
        "user_data": user_data,
        "session_id": 1,  # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ –µ—Å—Ç—å —Å–µ—Å—Å–∏—è —Å ID 1
        "interview_data": {
            "question_1": "–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞: –¢–µ—Å—Ç–æ–≤–∞—è –ò–ò-–ø–ª–∞—Ç—Ñ–æ—Ä–º–∞",
            "question_2": "–û–ø–∏—Å–∞–Ω–∏–µ: –†–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–ª–∞—Ç—Ñ–æ—Ä–º—É –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏",
            "question_3": "–ë—é–¥–∂–µ—Ç: 1000000 —Ä—É–±–ª–µ–π",
            "question_4": "–ö–æ–º–∞–Ω–¥–∞: 5 —á–µ–ª–æ–≤–µ–∫",
            "question_5": "–°—Ä–æ–∫–∏: 12 –º–µ—Å—è—Ü–µ–≤"
        }
    }
    
    try:
        # –°–æ–∑–¥–∞–µ–º –∞–Ω–∫–µ—Ç—É
        anketa_id = db.save_anketa(anketa_data)
        
        if anketa_id:
            print(f"‚úÖ –ê–Ω–∫–µ—Ç–∞ —Å–æ–∑–¥–∞–Ω–∞: {anketa_id}")
            return anketa_id
        else:
            print("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–Ω–∫–µ—Ç—ã")
            return None
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–Ω–∫–µ—Ç—ã: {e}")
        return None

def test_research_creation(anketa_id):
    """–¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è"""
    print(f"üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –¥–ª—è –∞–Ω–∫–µ—Ç—ã {anketa_id}...")
    
    try:
        # –°–æ–∑–¥–∞–µ–º Researcher Agent
        researcher = ResearcherAgent(db=db)
        
        # –ü—Ä–æ–≤–æ–¥–∏–º –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ
        result = researcher.research_anketa(anketa_id)
        
        if result.get('status') == 'success':
            print(f"‚úÖ –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ: {result.get('research_id')}")
            return result.get('research_id')
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è: {result.get('message')}")
            return None
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è: {e}")
        return None

def test_database_queries():
    """–¢–µ—Å—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∞–Ω–∫–µ—Ç
        print("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–Ω–∫–µ—Ç:")
        with db.connect() as conn:
            cursor = conn.cursor()
            cursor.execute("SELECT COUNT(*) FROM sessions WHERE anketa_id IS NOT NULL")
            anketa_count = cursor.fetchone()[0]
            print(f"  ‚Ä¢ –í—Å–µ–≥–æ –∞–Ω–∫–µ—Ç: {anketa_count}")
        
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π
        print("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π:")
        research_stats = db.get_research_statistics()
        print(f"  ‚Ä¢ –í—Å–µ–≥–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π: {research_stats.get('total_research', 0)}")
        print(f"  ‚Ä¢ –ü–æ —Å—Ç–∞—Ç—É—Å–∞–º: {research_stats.get('status_distribution', {})}")
        print(f"  ‚Ä¢ –ü–æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞–º: {research_stats.get('provider_distribution', {})}")
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π
        all_research = db.get_all_research(limit=10)
        print(f"üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è ({len(all_research)}):")
        for research in all_research:
            print(f"  ‚Ä¢ {research['research_id']} - {research.get('username', 'N/A')} - {research['status']}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ –ë–î: {e}")
        return False

def test_id_generation():
    """–¢–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ ID"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ ID...")
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_data = {
        "telegram_id": 987654321,
        "username": "another_user",
        "first_name": "–î—Ä—É–≥–æ–π",
        "last_name": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
    }
    
    try:
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º anketa_id
        anketa_id = db.generate_anketa_id(user_data)
        print(f"‚úÖ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω anketa_id: {anketa_id}")
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º research_id
        research_id = db.generate_research_id(user_data, anketa_id)
        print(f"‚úÖ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω research_id: {research_id}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ ID: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏")
    print("=" * 50)
    
    # –¢–µ—Å—Ç 1: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è ID
    print("\n1Ô∏è‚É£ –¢–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ ID")
    test_id_generation()
    
    # –¢–µ—Å—Ç 2: –°–æ–∑–¥–∞–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã
    print("\n2Ô∏è‚É£ –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∞–Ω–∫–µ—Ç—ã")
    anketa_id = test_anketa_creation()
    
    # –¢–µ—Å—Ç 3: –°–æ–∑–¥–∞–Ω–∏–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è (–µ—Å–ª–∏ –∞–Ω–∫–µ—Ç–∞ —Å–æ–∑–¥–∞–Ω–∞)
    if anketa_id:
        print("\n3Ô∏è‚É£ –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è")
        research_id = test_research_creation(anketa_id)
    else:
        print("\n3Ô∏è‚É£ –ü—Ä–æ–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è (–∞–Ω–∫–µ—Ç–∞ –Ω–µ —Å–æ–∑–¥–∞–Ω–∞)")
    
    # –¢–µ—Å—Ç 4: –ó–∞–ø—Ä–æ—Å—ã –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    print("\n4Ô∏è‚É£ –¢–µ—Å—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
    test_database_queries()
    
    print("\n" + "=" * 50)
    print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    main()
