#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ Streamlit —Å —Å–∏—Å—Ç–µ–º–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
"""

import streamlit as st
import sys
import os
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç–∏ –¥–ª—è –∏–º–ø–æ—Ä—Ç–æ–≤ —Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
current_dir = Path(__file__).parent
sys.path.insert(0, str(current_dir))
sys.path.insert(0, str(current_dir / "data"))

# –õ–æ–≥–∏—Ä—É–µ–º –ø—É—Ç–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
import logging
logging.basicConfig(level=logging.DEBUG)
logger = logging.getLogger(__name__)

logger.debug(f"Current directory: {current_dir}")
logger.debug(f"Python paths: {sys.path[:3]}")

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
try:
    # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å database
    logger.debug("Trying to import database...")
    from database import auth_manager
    logger.debug("‚úì Database imported successfully")
    
    # –¢–µ–ø–µ—Ä—å –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º auth_pages –Ω–∞–ø—Ä—è–º—É—é (–±–µ–∑ web_admin –ø—Ä–µ—Ñ–∏–∫—Å–∞)
    logger.debug("Trying to import auth_pages...")
    # –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ web-admin –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    web_admin_path = current_dir / "web-admin"
    if web_admin_path not in sys.path:
        sys.path.insert(0, str(web_admin_path))
    
    from auth_pages import PageAuth, check_auth, check_role
    logger.debug("‚úì Auth pages imported successfully")
    
except ImportError as e:
    st.error(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    st.error(f"–¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {current_dir}")
    st.error(f"Python –ø—É—Ç–∏: {sys.path[:5]}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞–∫–∏–µ —Ñ–∞–π–ª—ã —Å—É—â–µ—Å—Ç–≤—É—é—Ç
    st.write("–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤:")
    if (current_dir / "data" / "database.py").exists():
        st.success("‚úì data/database.py —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    else:
        st.error("‚úó data/database.py –ù–ï –Ω–∞–π–¥–µ–Ω")
        
    if (current_dir / "web-admin" / "auth_pages.py").exists():
        st.success("‚úì web-admin/auth_pages.py —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    else:
        st.error("‚úó web-admin/auth_pages.py –ù–ï –Ω–∞–π–¥–µ–Ω")
    
    st.stop()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="GrantService Admin - –¢–µ—Å—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏",
    page_icon="üîê",
    layout="wide"
)

def login_page():
    """–°—Ç—Ä–∞–Ω–∏—Ü–∞ –≤—Ö–æ–¥–∞"""
    st.title("üîê –í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É")
    
    with st.form("login_form"):
        st.write("### –¢–µ—Å—Ç–æ–≤–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è")
        st.info("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–µ—Å—Ç–æ–≤—ã–µ —É—á–µ—Ç–Ω—ã–µ –∑–∞–ø–∏—Å–∏:")
        
        col1, col2 = st.columns(2)
        with col1:
            st.code("""
            –ê–¥–º–∏–Ω: 
            ID: 123456789
            –¢–æ–∫–µ–Ω: admin_token
            """)
        
        with col2:
            st.code("""
            –†–µ–¥–∞–∫—Ç–æ—Ä:
            ID: 987654321  
            –¢–æ–∫–µ–Ω: editor_token
            """)
        
        user_id = st.text_input("Telegram ID")
        token = st.text_input("–¢–æ–∫–µ–Ω", type="password")
        
        if st.form_submit_button("–í–æ–π—Ç–∏", type="primary"):
            # –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ—Å—Ç—É—é –ª–æ–≥–∏–∫—É
            if user_id and token:
                # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                if user_id == "123456789" and token == "admin_token":
                    st.session_state.user_id = int(user_id)
                    st.session_state.role = "ADMIN"
                    st.session_state.token = token
                    st.session_state.authenticated = True
                    st.success("‚úÖ –í—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω –∫–∞–∫ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä")
                    st.rerun()
                elif user_id == "987654321" and token == "editor_token":
                    st.session_state.user_id = int(user_id)
                    st.session_state.role = "EDITOR"
                    st.session_state.token = token
                    st.session_state.authenticated = True
                    st.success("‚úÖ –í—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω –∫–∞–∫ –†–µ–¥–∞–∫—Ç–æ—Ä")
                    st.rerun()
                else:
                    st.error("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")

def admin_dashboard():
    """–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    st.title("üëë –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
    
    col1, col2, col3 = st.columns(3)
    
    with col1:
        st.metric("–†–æ–ª—å", st.session_state.role)
    with col2:
        st.metric("User ID", st.session_state.user_id)
    with col3:
        if st.button("üö™ –í—ã–π—Ç–∏"):
            for key in ['user_id', 'role', 'token', 'authenticated']:
                if key in st.session_state:
                    del st.session_state[key]
            st.rerun()
    
    st.divider()
    
    # –¢–∞–±—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
    tab1, tab2, tab3, tab4, tab5 = st.tabs([
        "üè† –ì–ª–∞–≤–Ω–∞—è",
        "üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏", 
        "üìù –ó–∞—è–≤–∫–∏",
        "ü§ñ –ê–≥–µ–Ω—Ç—ã",
        "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏"
    ])
    
    with tab1:
        st.header("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ GrantService Admin")
        st.write("–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–∞—è –ø–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Å —Å–∏—Å—Ç–µ–º–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏.")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–∞–≤–∞
        st.subheader("üìã –í–∞—à–∏ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞:")
        
        if st.session_state.role == "ADMIN":
            st.success("""
            ‚úÖ –ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º:
            - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
            - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–æ–ª—è–º–∏
            - –ü—Ä–æ—Å–º–æ—Ç—Ä –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞—è–≤–æ–∫
            - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–≥–µ–Ω—Ç–∞–º–∏
            - –°–∏—Å—Ç–µ–º–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
            - –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤
            """)
        elif st.session_state.role == "EDITOR":
            st.info("""
            ‚úÖ –î–æ—Å—Ç—É–ø –∫ —Ñ—É–Ω–∫—Ü–∏—è–º —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞:
            - –ü—Ä–æ—Å–º–æ—Ç—Ä –∑–∞—è–≤–æ–∫
            - –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–æ–ø—Ä–æ—Å–æ–≤
            - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–≥–µ–Ω—Ç–∞–º–∏
            - –ü—Ä–æ—Å–º–æ—Ç—Ä –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
            
            ‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ:
            - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
            - –°–∏—Å—Ç–µ–º–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
            """)
    
    with tab2:
        if st.session_state.role == "ADMIN":
            st.header("üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏")
            
            # –§–æ—Ä–º–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            with st.expander("‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"):
                with st.form("add_user"):
                    new_user_id = st.text_input("Telegram ID")
                    new_role = st.selectbox("–†–æ–ª—å", ["USER", "VIEWER", "EDITOR", "ADMIN"])
                    if st.form_submit_button("–î–æ–±–∞–≤–∏—Ç—å"):
                        st.success(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {new_user_id} –¥–æ–±–∞–≤–ª–µ–Ω —Å —Ä–æ–ª—å—é {new_role}")
            
            # –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            st.subheader("–¢–µ–∫—É—â–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏")
            users_data = {
                "ID": [123456789, 987654321, 555555555],
                "–†–æ–ª—å": ["ADMIN", "EDITOR", "USER"],
                "–°—Ç–∞—Ç—É—Å": ["‚úÖ –ê–∫—Ç–∏–≤–µ–Ω", "‚úÖ –ê–∫—Ç–∏–≤–µ–Ω", "‚è∏Ô∏è –ù–µ–∞–∫—Ç–∏–≤–µ–Ω"],
                "–ü–æ—Å–ª–µ–¥–Ω–∏–π –≤—Ö–æ–¥": ["–°–µ–≥–æ–¥–Ω—è", "–í—á–µ—Ä–∞", "–ù–µ–¥–µ–ª—é –Ω–∞–∑–∞–¥"]
            }
            st.dataframe(users_data, use_container_width=True)
            
        else:
            st.error("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏")
    
    with tab3:
        st.header("üìù –ó–∞—è–≤–∫–∏ –Ω–∞ –≥—Ä–∞–Ω—Ç—ã")
        
        # –§–∏–ª—å—Ç—Ä—ã
        col1, col2, col3 = st.columns(3)
        with col1:
            status_filter = st.selectbox("–°—Ç–∞—Ç—É—Å", ["–í—Å–µ", "–ù–æ–≤—ã–µ", "–í —Ä–∞–±–æ—Ç–µ", "–ó–∞–≤–µ—Ä—à–µ–Ω—ã"])
        with col2:
            agent_filter = st.selectbox("–ê–≥–µ–Ω—Ç", ["–í—Å–µ", "Interviewer", "Analyst", "Writer"])
        with col3:
            date_filter = st.date_input("–î–∞—Ç–∞")
        
        # –¢–∞–±–ª–∏—Ü–∞ –∑–∞—è–≤–æ–∫
        applications_data = {
            "ID": ["#001", "#002", "#003"],
            "–ù–∞–∑–≤–∞–Ω–∏–µ": ["–ü—Ä–æ–µ–∫—Ç –ê", "–ü—Ä–æ–µ–∫—Ç –ë", "–ü—Ä–æ–µ–∫—Ç –í"],
            "–°—Ç–∞—Ç—É—Å": ["üü¢ –í —Ä–∞–±–æ—Ç–µ", "üîµ –ù–æ–≤–∞—è", "‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–∞"],
            "–ê–≥–µ–Ω—Ç": ["Analyst", "Interviewer", "Writer"],
            "–ü—Ä–æ–≥—Ä–µ—Å—Å": ["60%", "20%", "100%"]
        }
        st.dataframe(applications_data, use_container_width=True)
        
        if st.session_state.role in ["ADMIN", "EDITOR"]:
            if st.button("‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—É—é –∑–∞—è–≤–∫—É"):
                st.info("–§—É–Ω–∫—Ü–∏—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞—è–≤–∫–∏")
    
    with tab4:
        st.header("ü§ñ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–≥–µ–Ω—Ç–∞–º–∏")
        
        if st.session_state.role in ["ADMIN", "EDITOR"]:
            # –°—Ç–∞—Ç—É—Å –∞–≥–µ–Ω—Ç–æ–≤
            st.subheader("–°—Ç–∞—Ç—É—Å –∞–≥–µ–Ω—Ç–æ–≤")
            
            agents = ["Interviewer", "Analyst", "Researcher", "Writer", "Auditor"]
            cols = st.columns(len(agents))
            
            for i, agent in enumerate(agents):
                with cols[i]:
                    st.metric(
                        agent,
                        "üü¢ –ê–∫—Ç–∏–≤–µ–Ω",
                        "5 –∑–∞–¥–∞—á"
                    )
            
            # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–≥–µ–Ω—Ç–æ–≤
            with st.expander("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–≥–µ–Ω—Ç–æ–≤"):
                selected_agent = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –∞–≥–µ–Ω—Ç–∞", agents)
                
                st.text_area(
                    f"–ü—Ä–æ–º–ø—Ç –¥–ª—è {selected_agent}",
                    value="–¢–µ–∫—É—â–∏–π –ø—Ä–æ–º–ø—Ç –∞–≥–µ–Ω—Ç–∞...",
                    height=200
                )
                
                if st.button("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–æ–º–ø—Ç"):
                    st.success("‚úÖ –ü—Ä–æ–º–ø—Ç –æ–±–Ω–æ–≤–ª–µ–Ω")
        else:
            st.info("‚ÑπÔ∏è –£ –≤–∞—Å –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø —Ç–æ–ª—å–∫–æ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞")
    
    with tab5:
        st.header("‚öôÔ∏è –°–∏—Å—Ç–µ–º–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
        
        if st.session_state.role == "ADMIN":
            st.subheader("üîß –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–∏—Å—Ç–µ–º—ã")
            
            # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ LLM
            with st.expander("üß† –ù–∞—Å—Ç—Ä–æ–π–∫–∏ LLM"):
                llm_provider = st.selectbox(
                    "–ü—Ä–æ–≤–∞–π–¥–µ—Ä",
                    ["GigaChat", "Perplexity", "Ollama"]
                )
                
                st.text_input("API Key", type="password", value="*" * 20)
                st.slider("Temperature", 0.0, 1.0, 0.7)
                st.slider("Max Tokens", 100, 4000, 2000)
                
                if st.button("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ LLM"):
                    st.success("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ LLM –æ–±–Ω–æ–≤–ª–µ–Ω—ã")
            
            # –õ–æ–≥–∏ —Å–∏—Å—Ç–µ–º—ã
            with st.expander("üìú –°–∏—Å—Ç–µ–º–Ω—ã–µ –ª–æ–≥–∏"):
                st.code("""
                [2024-01-17 10:30:15] INFO: System started
                [2024-01-17 10:30:20] INFO: Database connected
                [2024-01-17 10:30:25] INFO: Admin logged in (ID: 123456789)
                [2024-01-17 10:31:00] INFO: Agent Interviewer started task
                [2024-01-17 10:32:15] WARNING: High memory usage detected
                [2024-01-17 10:35:00] INFO: Application #001 processed
                """)
                
                if st.button("üîÑ –û–±–Ω–æ–≤–∏—Ç—å –ª–æ–≥–∏"):
                    st.rerun()
            
            # –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ
            with st.expander("üíæ –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ"):
                st.button("üì¶ –°–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –ë–î", type="primary")
                st.button("üì• –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏")
                
                st.info("–ü–æ—Å–ª–µ–¥–Ω—è—è —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: 2024-01-16 23:00")
        else:
            st.error("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–∏—Å—Ç–µ–º–Ω—ã–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é
    if 'authenticated' not in st.session_state:
        st.session_state.authenticated = False
    
    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    if not st.session_state.authenticated:
        login_page()
    else:
        admin_dashboard()
    
    # –§—É—Ç–µ—Ä —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
    st.divider()
    st.caption("""
    üîê GrantService Admin v1.0 | –¢–µ—Å—Ç–æ–≤–∞—è –≤–µ—Ä—Å–∏—è —Å —Å–∏—Å—Ç–µ–º–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    """)

if __name__ == "__main__":
    main()