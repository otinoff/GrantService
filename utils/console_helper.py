#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞ —Å —ç–º–æ–¥–∑–∏ –≤ –∫–æ–Ω—Å–æ–ª—å Windows
"""

import sys
import os
import io

# –°–ª–æ–≤–∞—Ä—å –∑–∞–º–µ–Ω—ã —ç–º–æ–¥–∑–∏ –Ω–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –º–∞—Ä–∫–µ—Ä—ã
EMOJI_REPLACEMENTS = {
    '‚úÖ': '[OK]',
    '‚ùå': '[ERROR]',
    '‚ö†Ô∏è': '[WARNING]',
    'üìä': '[STATS]',
    'üìà': '[CHART]',
    'üìã': '[LIST]',
    'üìù': '[NOTE]',
    'üîÑ': '[SYNC]',
    'üöÄ': '[START]',
    'üéâ': '[SUCCESS]',
    'üíæ': '[SAVE]',
    'üìÅ': '[FOLDER]',
    'üìÇ': '[FOLDER_OPEN]',
    'üìÑ': '[FILE]',
    'üîç': '[SEARCH]',
    '‚è∞': '[TIME]',
    'üîî': '[BELL]',
    'üí¨': '[CHAT]',
    'üë§': '[USER]',
    'üîê': '[LOCK]',
    'üîì': '[UNLOCK]',
    '‚≠ê': '[STAR]',
    'üìç': '[PIN]',
    'üèÜ': '[TROPHY]',
    'üí°': '[IDEA]',
    '‚ö°': '[FLASH]',
    'üîß': '[TOOL]',
    '‚öôÔ∏è': '[SETTINGS]',
    'üì±': '[PHONE]',
    'üíª': '[COMPUTER]',
    'üåê': '[WEB]',
    'üìß': '[EMAIL]',
    'üìû': '[CALL]',
    'üìÖ': '[CALENDAR]',
    'üìå': '[PUSHPIN]',
    'üîó': '[LINK]',
    '‚ú®': '[SPARKLES]',
    'üéØ': '[TARGET]',
    'üî•': '[FIRE]',
    'üí∞': '[MONEY]',
    'üìä': '[GRAPH]',
    'üìâ': '[GRAPH_DOWN]',
    'üìà': '[GRAPH_UP]',
    '‚úèÔ∏è': '[PENCIL]',
    'üóëÔ∏è': '[TRASH]',
    'üìÆ': '[MAILBOX]',
    'üì®': '[INCOMING]',
    'üì§': '[OUTGOING]',
    'üîñ': '[BOOKMARK]',
    'üè∑Ô∏è': '[TAG]',
    'üìõ': '[BADGE]',
    'üÜî': '[ID]',
    'üîë': '[KEY]',
    'üóùÔ∏è': '[OLD_KEY]',
    'üîí': '[LOCKED]',
    'üîì': '[UNLOCKED]',
    'üîê': '[LOCKED_KEY]',
    'üîè': '[LOCKED_PEN]'
}

def setup_console():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Å–æ–ª–∏ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å Unicode"""
    if os.name == 'nt':  # Windows
        # –ü—ã—Ç–∞–µ–º—Å—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å UTF-8 –∫–æ–¥–∏—Ä–æ–≤–∫—É
        try:
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–¥–∏—Ä–æ–≤–∫—É –¥–ª—è stdout
            sys.stdout = io.TextIOWrapper(
                sys.stdout.buffer, 
                encoding='utf-8',
                errors='replace'
            )
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–¥–∏—Ä–æ–≤–∫—É –¥–ª—è stderr
            sys.stderr = io.TextIOWrapper(
                sys.stderr.buffer,
                encoding='utf-8', 
                errors='replace'
            )
        except:
            # –ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–º–µ–Ω—É —ç–º–æ–¥–∑–∏
            pass

def safe_print(text, use_emoji=None):
    """
    –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –≤—ã–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∑–∞–º–µ–Ω–æ–π —ç–º–æ–¥–∑–∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
    
    Args:
        text: –¢–µ–∫—Å—Ç –¥–ª—è –≤—ã–≤–æ–¥–∞
        use_emoji: True - –≤—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç–º–æ–¥–∑–∏, 
                   False - –≤—Å–µ–≥–¥–∞ –∑–∞–º–µ–Ω—è—Ç—å –Ω–∞ —Ç–µ–∫—Å—Ç,
                   None - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ
    """
    if use_emoji is None:
        # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ
        use_emoji = can_use_emoji()
    
    if not use_emoji:
        # –ó–∞–º–µ–Ω—è–µ–º –≤—Å–µ —ç–º–æ–¥–∑–∏ –Ω–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –º–∞—Ä–∫–µ—Ä—ã
        for emoji, replacement in EMOJI_REPLACEMENTS.items():
            text = text.replace(emoji, replacement)
    
    try:
        print(text)
    except UnicodeEncodeError:
        # –ï—Å–ª–∏ –≤—Å—ë —Ä–∞–≤–Ω–æ –æ—à–∏–±–∫–∞, –∑–∞–º–µ–Ω—è–µ–º —ç–º–æ–¥–∑–∏
        for emoji, replacement in EMOJI_REPLACEMENTS.items():
            text = text.replace(emoji, replacement)
        print(text)

def can_use_emoji():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç–º–æ–¥–∑–∏ –≤ –∫–æ–Ω—Å–æ–ª–∏"""
    if os.name != 'nt':
        # –ù–∞ Linux/Mac –æ–±—ã—á–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç
        return True
    
    # –ù–∞ Windows –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–¥–∏—Ä–æ–≤–∫—É
    try:
        # –ü—ã—Ç–∞–µ–º—Å—è –≤—ã–≤–µ—Å—Ç–∏ —Ç–µ—Å—Ç–æ–≤—ã–π —ç–º–æ–¥–∑–∏
        test_emoji = '‚úÖ'
        test_emoji.encode(sys.stdout.encoding)
        return True
    except (UnicodeEncodeError, AttributeError):
        return False

def replace_emojis_in_file(filepath, backup=True):
    """
    –ó–∞–º–µ–Ω–∏—Ç—å –≤—Å–µ —ç–º–æ–¥–∑–∏ –≤ —Ñ–∞–π–ª–µ –Ω–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –º–∞—Ä–∫–µ—Ä—ã
    
    Args:
        filepath: –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É
        backup: –°–æ–∑–¥–∞–≤–∞—Ç—å –ª–∏ —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
    """
    import shutil
    
    # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
    if backup:
        backup_path = filepath + '.backup'
        shutil.copy2(filepath, backup_path)
        print(f"[INFO] –°–æ–∑–¥–∞–Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: {backup_path}")
    
    # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
    with open(filepath, 'r', encoding='utf-8') as f:
        content = f.read()
    
    # –ó–∞–º–µ–Ω—è–µ–º —ç–º–æ–¥–∑–∏
    original_content = content
    for emoji, replacement in EMOJI_REPLACEMENTS.items():
        content = content.replace(emoji, replacement)
    
    # –ï—Å–ª–∏ –±—ã–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è, —Å–æ—Ö—Ä–∞–Ω—è–µ–º
    if content != original_content:
        with open(filepath, 'w', encoding='utf-8') as f:
            f.write(content)
        print(f"[OK] –§–∞–π–ª –æ–±–Ω–æ–≤–ª–µ–Ω: {filepath}")
        return True
    else:
        print(f"[INFO] –≠–º–æ–¥–∑–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ —Ñ–∞–π–ª–µ: {filepath}")
        return False

def process_directory(directory, extensions=None, backup=True):
    """
    –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤—Å–µ —Ñ–∞–π–ª—ã –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    
    Args:
        directory: –ü—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
        extensions: –°–ø–∏—Å–æ–∫ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, ['.py', '.md'])
        backup: –°–æ–∑–¥–∞–≤–∞—Ç—å –ª–∏ —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏
    """
    import glob
    
    if extensions is None:
        extensions = ['.py']
    
    processed = 0
    for ext in extensions:
        pattern = os.path.join(directory, '**', f'*{ext}')
        files = glob.glob(pattern, recursive=True)
        
        for filepath in files:
            if '.backup' not in filepath:
                if replace_emojis_in_file(filepath, backup):
                    processed += 1
    
    print(f"[SUCCESS] –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: {processed}")
    return processed

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ –º–æ–¥—É–ª—è
setup_console()

if __name__ == "__main__":
    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    print("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—ã–≤–æ–¥–∞ —ç–º–æ–¥–∑–∏:")
    print("-" * 40)
    
    # –ü—Ä—è–º–æ–π –≤—ã–≤–æ–¥ (–º–æ–∂–µ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞—Ç—å –≤ Windows)
    try:
        print("–ü—Ä—è–º–æ–π –≤—ã–≤–æ–¥: ‚úÖ –£—Å–ø–µ—Ö, ‚ùå –û—à–∏–±–∫–∞, ‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ")
    except:
        print("–ü—Ä—è–º–æ–π –≤—ã–≤–æ–¥ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
    
    # –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –≤—ã–≤–æ–¥
    safe_print("–ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –≤—ã–≤–æ–¥: ‚úÖ –£—Å–ø–µ—Ö, ‚ùå –û—à–∏–±–∫–∞, ‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ")
    
    # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –±–µ–∑ —ç–º–æ–¥–∑–∏
    safe_print("–ë–µ–∑ —ç–º–æ–¥–∑–∏: ‚úÖ –£—Å–ø–µ—Ö, ‚ùå –û—à–∏–±–∫–∞, ‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", use_emoji=False)