#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°—Ç—Ä–∞–Ω–∏—Ü–∞ Writer Agent - –Ω–∞–ø–∏—Å–∞–Ω–∏–µ –≥—Ä–∞–Ω—Ç–æ–≤—ã—Ö –∑–∞—è–≤–æ–∫
–û–ë–ù–û–í–õ–ï–ù–û: –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –æ–±—â–∏–µ –º–æ–¥—É–ª–∏ agent_components –∏ ui_helpers
"""

import streamlit as st
import sys
import os
from datetime import datetime
import json

# Authorization check
try:
    from utils.auth import is_user_authorized, require_auth
    if not is_user_authorized():
        st.error("‚õî –ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É üîê –í—Ö–æ–¥")
        st.stop()
except ImportError as e:
    st.error(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {e}")
    st.stop()

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç–∏ –∫ –º–æ–¥—É–ª—è–º
current_dir = os.path.dirname(os.path.abspath(__file__))
parent_dir = os.path.dirname(current_dir)  # web-admin
grandparent_dir = os.path.dirname(parent_dir)  # GrantService
sys.path.insert(0, os.path.join(grandparent_dir, 'telegram-bot'))
sys.path.insert(0, os.path.join(grandparent_dir, 'agents'))

# –ò–º–ø–æ—Ä—Ç –æ–±—â–∏—Ö –º–æ–¥—É–ª–µ–π
try:
    from utils.agent_components import (
        render_agent_header,
        render_agent_stats,
        render_prompt_management,
        render_agent_testing,
        render_agent_config
    )
    from utils.ui_helpers import (
        render_page_header,
        render_metric_cards,
        show_success_message,
        show_error_message,
        render_tabs
    )
    UTILS_AVAILABLE = True
except ImportError as e:
    st.error(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ —É—Ç–∏–ª–∏—Ç: {e}")
    UTILS_AVAILABLE = False

# –ò–º–ø–æ—Ä—Ç—ã –∞–≥–µ–Ω—Ç–æ–≤ –∏ —Å–µ—Ä–≤–∏—Å–æ–≤
try:
    from services.llm_router import LLMRouter, LLMProvider
    from services.gigachat_service import GigaChatService
    from services.local_llm_service import LocalLLMService
    from agents.writer_agent import WriterAgent
    from data.database.prompts import (
        get_prompts_by_agent, get_prompt_by_name, format_prompt,
        create_prompt, update_prompt, delete_prompt, get_all_categories
    )
    from data.database import GrantServiceDatabase
    AGENTS_AVAILABLE = True
    PROMPTS_AVAILABLE = True
    DATABASE_AVAILABLE = True
except ImportError as e:
    st.error(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –∞–≥–µ–Ω—Ç–æ–≤: {e}")
    AGENTS_AVAILABLE = False
    PROMPTS_AVAILABLE = False
    DATABASE_AVAILABLE = False

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="‚úçÔ∏è Writer Agent",
    page_icon="‚úçÔ∏è",
    layout="wide",
    initial_sidebar_state="expanded"
)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Å—Å–∏–∏
if 'agent_results' not in st.session_state:
    st.session_state.agent_results = {}
if 'writer_timestamp' not in st.session_state:
    st.session_state.writer_timestamp = None
if 'writer_anketa_id' not in st.session_state:
    st.session_state.writer_anketa_id = None
if 'writer_research_id' not in st.session_state:
    st.session_state.writer_research_id = None


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã Writer Agent"""

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–∞
    if UTILS_AVAILABLE:
        render_agent_header({
            'name': 'Writer Agent',
            'emoji': '‚úçÔ∏è',
            'description': '–ê–≥–µ–Ω—Ç –¥–ª—è –Ω–∞–ø–∏—Å–∞–Ω–∏—è –≥—Ä–∞–Ω—Ç–æ–≤—ã—Ö –∑–∞—è–≤–æ–∫ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏–Ω—Ç–µ—Ä–≤—å—é –∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π',
            'status': 'active'
        })
    else:
        st.header("‚úçÔ∏è Writer Agent")
        st.markdown("---")

    # –°–æ–∑–¥–∞–µ–º –≤–∫–ª–∞–¥–∫–∏
    if UTILS_AVAILABLE:
        tabs = render_tabs(
            ['–ù–∞—Å—Ç—Ä–æ–π–∫–∏', '–ü—Ä–æ–º–ø—Ç—ã', '–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ', '–ò—Å—Ç–æ—Ä–∏—è'],
            ['‚öôÔ∏è', 'üìù', 'üß™', 'üìú']
        )
    else:
        tabs = st.tabs(['‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏', 'üìù –ü—Ä–æ–º–ø—Ç—ã', 'üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ', 'üìú –ò—Å—Ç–æ—Ä–∏—è'])

    # –í–∫–ª–∞–¥–∫–∞: –ù–∞—Å—Ç—Ä–æ–π–∫–∏
    with tabs[0]:
        col1, col2 = st.columns([2, 1])

        with col1:
            st.subheader("‚öôÔ∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∞–≥–µ–Ω—Ç–∞")

            if UTILS_AVAILABLE:
                config = render_agent_config('writer', {
                    'provider': 'auto',
                    'temperature': 0.4,
                    'max_tokens': 1500
                })
            else:
                # Fallback to old style
                llm_provider = st.selectbox(
                    "–ü—Ä–æ–≤–∞–π–¥–µ—Ä LLM",
                    ["auto", "gigachat", "local"],
                    key="writer_provider"
                )

                temperature = st.slider("–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞", 0.1, 1.0, 0.4, key="writer_temp")
                max_tokens = st.number_input("–ú–∞–∫—Å. —Ç–æ–∫–µ–Ω–æ–≤", 100, 3000, 1500, key="writer_tokens")

        with col2:
            st.subheader("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")

            if UTILS_AVAILABLE:
                render_agent_stats('writer', {
                    'total_executions': 8,
                    'successful_executions': 8,
                    'avg_time': 3.1,
                    'success_rate': 92
                })
            else:
                st.metric("–ó–∞—è–≤–æ–∫ —Å–æ–∑–¥–∞–Ω–æ", "8")
                st.metric("–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è", "3.1 —Å–µ–∫")
                st.metric("–£—Å–ø–µ—à–Ω–æ—Å—Ç—å", "92%")

        st.markdown("---")

        # –í—ã–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö –∏–∑ –±–∞–∑—ã
        st.subheader("üìã –í—ã–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –Ω–∞–ø–∏—Å–∞–Ω–∏—è")

        if DATABASE_AVAILABLE:
            try:
                db = GrantServiceDatabase()

                # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∞–Ω–∫–µ—Ç
                with db.get_connection() as conn:
                    cursor = conn.cursor()
                    cursor.execute("""
                        SELECT s.id, u.first_name, u.last_name, s.started_at, s.status
                        FROM sessions s
                        JOIN users u ON s.user_id = u.telegram_id
                        WHERE s.status = 'completed'
                        ORDER BY s.started_at DESC
                        LIMIT 50
                    """)
                    sessions = cursor.fetchall()

                if sessions:
                    session_options = [
                        f"–ê–Ω–∫–µ—Ç–∞ #{s[0]} - {s[1]} {s[2]} ({s[3]})"
                        for s in sessions
                    ]

                    selected_session = st.selectbox(
                        "–í—ã–±–µ—Ä–∏—Ç–µ –∞–Ω–∫–µ—Ç—É",
                        session_options,
                        key="writer_session_select"
                    )

                    if selected_session:
                        anketa_id = int(selected_session.split('#')[1].split(' ')[0])
                        st.session_state.writer_anketa_id = anketa_id

                        if UTILS_AVAILABLE:
                            show_success_message(f"–í—ã–±—Ä–∞–Ω–∞ –∞–Ω–∫–µ—Ç–∞ #{anketa_id}")
                        else:
                            st.success(f"‚úÖ –í—ã–±—Ä–∞–Ω–∞ –∞–Ω–∫–µ—Ç–∞ #{anketa_id}")
                else:
                    if UTILS_AVAILABLE:
                        show_error_message("–ù–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –∞–Ω–∫–µ—Ç")
                    else:
                        st.warning("‚ö†Ô∏è –ù–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –∞–Ω–∫–µ—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏")

            except Exception as e:
                if UTILS_AVAILABLE:
                    show_error_message(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")
                else:
                    st.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")
        else:
            st.warning("‚ö†Ô∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")

        # –ö–Ω–æ–ø–∫–∞ –∑–∞–ø—É—Å–∫–∞
        st.markdown("---")
        if st.button("‚ñ∂Ô∏è –ó–∞–ø—É—Å—Ç–∏—Ç—å Writer Agent", type="primary", use_container_width=True):
            if not st.session_state.writer_anketa_id:
                if UTILS_AVAILABLE:
                    show_error_message("–í—ã–±–µ—Ä–∏—Ç–µ –∞–Ω–∫–µ—Ç—É –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏")
                else:
                    st.error("‚ùå –í—ã–±–µ—Ä–∏—Ç–µ –∞–Ω–∫–µ—Ç—É –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏")
            else:
                with st.spinner("üîÑ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≥—Ä–∞–Ω—Ç–æ–≤–æ–π –∑–∞—è–≤–∫–∏..."):
                    try:
                        # TODO: –ó–∞–ø—É—Å–∫ Writer Agent
                        st.session_state.writer_timestamp = datetime.now()
                        if UTILS_AVAILABLE:
                            show_success_message("–ì—Ä–∞–Ω—Ç–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞!")
                        else:
                            st.success("‚úÖ –ì—Ä–∞–Ω—Ç–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞!")
                    except Exception as e:
                        if UTILS_AVAILABLE:
                            show_error_message(f"–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {e}")
                        else:
                            st.error(f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {e}")

    # –í–∫–ª–∞–¥–∫–∞: –ü—Ä–æ–º–ø—Ç—ã
    with tabs[1]:
        if UTILS_AVAILABLE and PROMPTS_AVAILABLE:
            render_prompt_management('writer')
        else:
            st.warning("‚ö†Ô∏è –ú–æ–¥—É–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–º–ø—Ç–∞–º–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")

    # –í–∫–ª–∞–¥–∫–∞: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    with tabs[2]:
        if UTILS_AVAILABLE:
            render_agent_testing('writer')
        else:
            st.info("üß™ –§—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –º–æ–¥—É–ª–µ–π")

    # –í–∫–ª–∞–¥–∫–∞: –ò—Å—Ç–æ—Ä–∏—è
    with tabs[3]:
        st.subheader("üìú –ò—Å—Ç–æ—Ä–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è")
        st.info("–ò—Å—Ç–æ—Ä–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–∫–∞ –ø—É—Å—Ç–∞")


if __name__ == "__main__":
    main()
