#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Settings Page - GrantService Admin (v2.0)
System settings: –í–æ–ø—Ä–æ—Å—ã –∏–Ω—Ç–µ—Ä–≤—å—é | –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è | –°–∏—Å—Ç–µ–º–∞
"""

import streamlit as st
import sys
from pathlib import Path

# PATH SETUP
current_file = Path(__file__).resolve()
web_admin_dir = current_file.parent.parent
if str(web_admin_dir) not in sys.path:
    sys.path.insert(0, str(web_admin_dir))

# IMPORTS
try:
    from utils.database import AdminDatabase, get_db_connection
    from utils.ui_helpers import render_page_header, render_metric_cards, render_tabs, show_success_message
    from utils.logger import setup_logger
except ImportError as e:
    st.error(f"Error importing: {e}")
    st.stop()

# PAGE CONFIG
st.set_page_config(page_title="–ù–∞—Å—Ç—Ä–æ–π–∫–∏", page_icon="‚öôÔ∏è", layout="wide")
logger = setup_logger('settings_page')

# DATABASE
@st.cache_resource
def get_database():
    return AdminDatabase()

db = get_database()

# MAIN
render_page_header("–ù–∞—Å—Ç—Ä–æ–π–∫–∏", "‚öôÔ∏è", "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ")

# TABS
tab_names = ["–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è", "–°–∏—Å—Ç–µ–º–∞"]
tab_icons = ["üîê", "‚öôÔ∏è"]
selected_tab = render_tabs(tab_names, icons=tab_icons)

if selected_tab == "–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è":
    st.markdown("### üîê –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–æ–º")
    
    # Auth stats
    render_metric_cards([
        {'label': '–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∞–¥–º–∏–Ω–∫–∏', 'value': 0, 'icon': 'üë•'},
        {'label': '–ê–∫—Ç–∏–≤–Ω—ã—Ö —Ç–æ–∫–µ–Ω–æ–≤', 'value': 0, 'icon': 'üîë'},
        {'label': '–í—Ö–æ–¥–æ–≤ –∑–∞ 24—á', 'value': 0, 'icon': 'üìä'}
    ], columns=3)
    
    st.markdown("---")
    
    # Add admin user
    st.markdown("#### ‚ûï –î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
    
    with st.form("add_admin_form"):
        col1, col2 = st.columns(2)
        
        with col1:
            admin_username = st.text_input("Username")
            admin_role = st.selectbox("–†–æ–ª—å", ["admin", "coordinator", "viewer"])
        
        with col2:
            admin_token = st.text_input("–¢–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞", type="password")
            admin_active = st.checkbox("–ê–∫—Ç–∏–≤–µ–Ω", value=True)
        
        if st.form_submit_button("‚ûï –î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞", use_container_width=True):
            show_success_message("–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –¥–æ–±–∞–≤–ª–µ–Ω!")
    
    st.markdown("---")
    
    # Token management
    st.markdown("#### üîë –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞–º–∏")
    
    st.info("–°–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ç–æ–∫–µ–Ω–æ–≤ –¥–æ—Å—Ç—É–ø–∞ –∏ –∏—Å—Ç–æ—Ä–∏—è –≤—Ö–æ–¥–æ–≤")

elif selected_tab == "–°–∏—Å—Ç–µ–º–∞":
    st.markdown("### ‚öôÔ∏è –°–∏—Å—Ç–µ–º–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
    
    # System status
    st.markdown("#### üíö –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤")
    
    col1, col2, col3 = st.columns(3)
    
    with col1:
        st.markdown("**–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö**")
        st.success("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∞")
        st.caption("SQLite: grantservice.db")
    
    with col2:
        st.markdown("**Telegram Bot**")
        st.warning("üîÑ –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
        st.caption("–¢—Ä–µ–±—É–µ—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∫–∞")
    
    with col3:
        st.markdown("**GigaChat API**")
        st.warning("üîÑ –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
        st.caption("–¢—Ä–µ–±—É–µ—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∫–∞")
    
    st.markdown("---")
    
    # API Settings
    st.markdown("#### üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∏ API")
    
    with st.form("api_settings_form"):
        st.markdown("**GigaChat API**")
        gigachat_token = st.text_input("API Token", type="password", value="********")
        gigachat_model = st.selectbox("–ú–æ–¥–µ–ª—å", ["GigaChat", "GigaChat-Pro", "GigaChat-Plus"])
        
        st.markdown("**Telegram Bot**")
        telegram_token = st.text_input("Bot Token", type="password", value="********")
        telegram_webhook = st.text_input("Webhook URL (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)")
        
        if st.form_submit_button("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏", use_container_width=True):
            show_success_message("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!")
    
    st.markdown("---")
    
    # Database settings
    st.markdown("#### üíæ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö")
    
    col1, col2 = st.columns(2)
    
    with col1:
        st.write(f"**–ü—É—Ç—å:** {db.db_path if hasattr(db, 'db_path') else 'N/A'}")
        st.write("**–¢–∏–ø:** SQLite")
    
    with col2:
        if st.button("üîÑ –°–æ–∑–¥–∞—Ç—å backup", use_container_width=True):
            show_success_message("Backup —Å–æ–∑–¥–∞–Ω!")
        
        if st.button("üìä –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å", use_container_width=True):
            show_success_message("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –ø–æ—Ä—è–¥–∫–µ!")
    
    st.markdown("---")
    
    # Limits and quotas
    st.markdown("#### üìä –õ–∏–º–∏—Ç—ã –∏ –∫–≤–æ—Ç—ã")
    
    with st.form("limits_form"):
        col1, col2 = st.columns(2)
        
        with col1:
            max_users = st.number_input("–ú–∞–∫—Å. –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", min_value=10, value=1000)
            max_grants_per_day = st.number_input("–ú–∞–∫—Å. –≥—Ä–∞–Ω—Ç–æ–≤ –≤ –¥–µ–Ω—å", min_value=1, value=100)
        
        with col2:
            token_limit_daily = st.number_input("–õ–∏–º–∏—Ç —Ç–æ–∫–µ–Ω–æ–≤ –≤ –¥–µ–Ω—å", min_value=1000, value=100000)
            api_rate_limit = st.number_input("API –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –º–∏–Ω—É—Ç—É", min_value=1, value=60)
        
        if st.form_submit_button("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ª–∏–º–∏—Ç—ã", use_container_width=True):
            show_success_message("–õ–∏–º–∏—Ç—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã!")
