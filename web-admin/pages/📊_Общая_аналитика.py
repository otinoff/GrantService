#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
General analytics page for GrantService admin panel
"""

import streamlit as st
import sys
import os

# Simple imports without path manipulation
# The environment will be set up by the launcher

# Authorization check
try:
    from utils.auth import is_user_authorized
    if not is_user_authorized():
        st.error("‚õî –ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω / Not authorized")
        st.info("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±–æ—Ç–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞ / Please use the bot to get a token")
        st.stop()
except ImportError as e:
    st.error(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ / Import error: {e}")
    st.info("–ó–∞–ø—É—Å—Ç–∏—Ç–µ —á–µ—Ä–µ–∑ launcher.py / Run via launcher.py")
    st.stop()

General analytics page for GrantService admin panel
"""

import streamlit as st
import sys
import pandas as pd
from datetime import datetime, timedelta

import streamlit as st
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç–∏ –∫—Ä–æ—Å—Å–ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω–æ
current_dir = os.path.dirname(os.path.abspath(__file__))
parent_dir = os.path.dirname(current_dir)  # web-admin
grandparent_dir = os.path.dirname(parent_dir)  # GrantService
sys.path.insert(0, grandparent_dir)  # –î–ª—è –∏–º–ø–æ—Ä—Ç–∞ config –∏ data
sys.path.insert(0, parent_dir)  # –î–ª—è –∏–º–ø–æ—Ä—Ç–∞ utils

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
from utils.auth import is_user_authorized

if not is_user_authorized():
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞
    import importlib.util
    spec = importlib.util.spec_from_file_location(
        "login_page",
        os.path.join(current_dir, "üîê_–í—Ö–æ–¥.py")
    )
    login_module = importlib.util.module_from_spec(spec)
    spec.loader.exec_module(login_module)
    login_module.show_login_page()
    st.stop()

from utils.database import AdminDatabase
from utils.charts import create_metrics_cards, create_daily_chart

# –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ–±—â–µ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
st.title("üìä –û–±—â–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ë–î
db = AdminDatabase()

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
stats = db.get_basic_stats()
daily_stats = db.get_daily_stats(days=30)

# –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏
st.subheader("üìà –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏")
create_metrics_cards(stats)

# –ì—Ä–∞—Ñ–∏–∫–∏
col1, col2 = st.columns(2)

with col1:
    st.subheader("üìä –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ –¥–Ω—è–º")
    create_daily_chart(daily_stats, "–°–µ—Å—Å–∏–∏ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π")

with col2:
    st.subheader("üìà –ö–æ–Ω–≤–µ—Ä—Å–∏—è")
    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≥—Ä–∞—Ñ–∏–∫ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏
    st.info("–ì—Ä–∞—Ñ–∏–∫ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏")

# –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
st.subheader("üìã –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")

col1, col2, col3 = st.columns(3)

with col1:
    st.metric("–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è —Å–µ—Å—Å–∏–∏", "12 –º–∏–Ω")
    st.metric("–ü–∏–∫–æ–≤–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞", "45 —Å–µ—Å—Å–∏–π/—á–∞—Å")

with col2:
    st.metric("–£—Å–ø–µ—à–Ω—ã–µ –∑–∞—è–≤–∫–∏", f"{stats.get('completed_apps', 0)}")
    st.metric("–û—Ç–∫–ª–æ–Ω–µ–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏", "23")

with col3:
    st.metric("–°—Ä–µ–¥–Ω–∏–π —Ä–µ–π—Ç–∏–Ω–≥", "4.8/5")
    st.metric("–í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞", "2.3 —Å–µ–∫")

# –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö
st.subheader("üì§ –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö")

col1, col2 = st.columns(2)

with col1:
    if st.button("üìä –≠–∫—Å–ø–æ—Ä—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"):
        # –°–æ–∑–¥–∞–µ–º DataFrame –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞
        stats_df = pd.DataFrame([stats])
        csv = stats_df.to_csv(index=False)
        st.download_button(
            label="–°–∫–∞—á–∞—Ç—å CSV",
            data=csv,
            file_name=f"analytics_stats_{datetime.now().strftime('%Y%m%d_%H%M%S')}.csv",
            mime="text/csv"
        )

with col2:
    if st.button("üìà –≠–∫—Å–ø–æ—Ä—Ç –≥—Ä–∞—Ñ–∏–∫–æ–≤"):
        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —ç–∫—Å–ø–æ—Ä—Ç –≥—Ä–∞—Ñ–∏–∫–æ–≤
        st.info("–≠–∫—Å–ø–æ—Ä—Ç –≥—Ä–∞—Ñ–∏–∫–æ–≤") 