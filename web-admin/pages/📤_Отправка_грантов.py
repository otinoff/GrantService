#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
GrantService Admin Panel - –û—Ç–ø—Ä–∞–≤–∫–∞ –≥–æ—Ç–æ–≤—ã—Ö –≥—Ä–∞–Ω—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
"""

import streamlit as st
import sys
import os
import json
from pathlib import Path
from datetime import datetime
import traceback

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç–∏ –¥–ª—è –∏–º–ø–æ—Ä—Ç–æ–≤
current_file = Path(__file__).resolve()
web_admin_dir = current_file.parent.parent
base_dir = web_admin_dir.parent

if str(web_admin_dir) not in sys.path:
    sys.path.insert(0, str(web_admin_dir))
if str(base_dir) not in sys.path:
    sys.path.insert(0, str(base_dir))

# –ò–º–ø–æ—Ä—Ç—ã
try:
    from data.database.models import GrantServiceDatabase
    
    # –î–ª—è –∏–º–ø–æ—Ä—Ç–∞ telegram_sender –¥–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ utils
    utils_path = web_admin_dir / "utils"
    if str(utils_path) not in sys.path:
        sys.path.insert(0, str(utils_path))
    
    from telegram_sender import send_document_to_telegram
except ImportError as e:
    st.error(f"–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    st.error(f"–ü—É—Ç–∏ –ø–æ–∏—Å–∫–∞: {sys.path[:3]}...")
    st.stop()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –≥—Ä–∞–Ω—Ç–æ–≤",
    page_icon="üì§",
    layout="wide"
)

st.title("üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –≥–æ—Ç–æ–≤—ã—Ö –≥—Ä–∞–Ω—Ç–æ–≤")
st.markdown("---")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
@st.cache_resource
def get_database():
    """–ü–æ–ª—É—á–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    try:
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –û–°
        if os.name == 'nt':  # Windows
            db_path = str(base_dir / "data" / "grantservice.db")
        else:  # Linux
            db_path = "/var/GrantService/data/grantservice.db"
        
        return GrantServiceDatabase(db_path)
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î: {e}")
        return None

db = get_database()
if not db:
    st.stop()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
@st.cache_data(ttl=300)  # –ö—ç—à –Ω–∞ 5 –º–∏–Ω—É—Ç
def get_users_list():
    """–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    try:
        users = db.get_users_for_sending()
        return users
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {e}")
        return []

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≥—Ä–∞–Ω—Ç–æ–≤—ã—Ö –∑–∞—è–≤–æ–∫
@st.cache_data(ttl=300)  # –ö—ç—à –Ω–∞ 5 –º–∏–Ω—É—Ç  
def get_applications_list():
    """–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≥—Ä–∞–Ω—Ç–æ–≤—ã—Ö –∑–∞—è–≤–æ–∫"""
    try:
        applications = db.get_all_applications(limit=200)
        return applications
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞—è–≤–æ–∫: {e}")
        return []

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤ –∏–∑ –ø–∞–ø–∫–∏ ready_grants
def get_ready_files():
    """–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≥–æ—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤"""
    try:
        ready_grants_dir = base_dir / "data" / "ready_grants"
        if not ready_grants_dir.exists():
            return []
        
        files = []
        for file_path in ready_grants_dir.iterdir():
            if file_path.is_file() and file_path.suffix.lower() in ['.pdf', '.docx', '.doc', '.txt']:
                files.append({
                    'name': file_path.name,
                    'path': str(file_path),
                    'size': file_path.stat().st_size,
                    'modified': datetime.fromtimestamp(file_path.stat().st_mtime)
                })
        
        # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è (–Ω–æ–≤—ã–µ —Å–Ω–∞—á–∞–ª–∞)
        files.sort(key=lambda x: x['modified'], reverse=True)
        return files
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤: {e}")
        return []

# –û—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
col1, col2 = st.columns([1, 1])

with col1:
    st.subheader("üë• –í—ã–±–æ—Ä –ø–æ–ª—É—á–∞—Ç–µ–ª—è")
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    users = get_users_list()
    
    if not users:
        st.warning("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        st.stop()
    
    # –°–æ–∑–¥–∞–µ–º —Å–ª–æ–≤–∞—Ä—å –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    user_options = {}
    for user in users:
        user_options[user['display_name']] = user['telegram_id']
    
    selected_user_name = st.selectbox(
        "–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:",
        options=list(user_options.keys()),
        help="–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞"
    )
    
    selected_user_id = user_options[selected_user_name]
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    selected_user = next(u for u in users if u['telegram_id'] == selected_user_id)
    
    with st.expander("‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ"):
        st.metric("Telegram ID", selected_user['telegram_id'])
        st.metric("–í—Å–µ–≥–æ —Å–µ—Å—Å–∏–π", selected_user['total_sessions'])
        st.metric("–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –∑–∞—è–≤–æ–∫", selected_user['completed_applications'])
        st.text(f"–ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: {selected_user['last_active']}")

with col2:
    st.subheader("üìÑ –í—ã–±–æ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞")
    
    # –í–∫–ª–∞–¥–∫–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
    tab1, tab2, tab3 = st.tabs(["üóÇÔ∏è –ì–æ—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã", "üìã –ò–∑ –∑–∞—è–≤–æ–∫", "üì§ –ó–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–≤—ã–π"])
    
    selected_file_path = None
    selected_file_name = None
    selected_grant_id = None
    
    with tab1:
        # –ì–æ—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã –∏–∑ –ø–∞–ø–∫–∏
        ready_files = get_ready_files()
        
        if ready_files:
            file_options = {}
            for file_info in ready_files:
                size_mb = file_info['size'] / (1024 * 1024)
                display_name = f"{file_info['name']} ({size_mb:.1f} MB)"
                file_options[display_name] = file_info
            
            selected_file_display = st.selectbox(
                "–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ç–æ–≤—ã–π —Ñ–∞–π–ª:",
                options=list(file_options.keys()),
                help="–§–∞–π–ª—ã –∏–∑ –ø–∞–ø–∫–∏ data/ready_grants"
            )
            
            if selected_file_display:
                selected_file_info = file_options[selected_file_display]
                selected_file_path = selected_file_info['path']
                selected_file_name = selected_file_info['name']
                
                st.success(f"‚úÖ –í—ã–±—Ä–∞–Ω —Ñ–∞–π–ª: {selected_file_name}")
        else:
            st.info("–ì–æ—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –ø–∞–ø–∫–µ data/ready_grants")
    
    with tab2:
        # –§–∞–π–ª—ã –∏–∑ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∑–∞—è–≤–æ–∫
        applications = get_applications_list()
        
        if applications:
            app_options = {}
            for app in applications:
                display_name = f"{app['application_number']} - {app['title'][:50]}..."
                app_options[display_name] = app
            
            selected_app_display = st.selectbox(
                "–í—ã–±–µ—Ä–∏—Ç–µ –∑–∞—è–≤–∫—É:",
                options=list(app_options.keys()),
                help="–ó–∞—è–≤–∫–∏ –±—É–¥—É—Ç —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –≤ PDF"
            )
            
            if selected_app_display:
                selected_app = app_options[selected_app_display]
                selected_grant_id = selected_app['application_number']
                selected_file_name = f"{selected_grant_id}.pdf"
                
                st.success(f"‚úÖ –í—ã–±—Ä–∞–Ω–∞ –∑–∞—è–≤–∫–∞: {selected_grant_id}")
                st.info("üí° –ó–∞—è–≤–∫–∞ –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∞ –≤ PDF –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ")
        else:
            st.info("–ì—Ä–∞–Ω—Ç–æ–≤—ã–µ –∑–∞—è–≤–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
    
    with tab3:
        # –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞
        uploaded_file = st.file_uploader(
            "–ó–∞–≥—Ä—É–∑–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç:",
            type=['pdf', 'docx', 'doc', 'txt'],
            help="–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã: PDF, DOCX, DOC, TXT"
        )
        
        if uploaded_file:
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É
            ready_grants_dir = base_dir / "data" / "ready_grants"
            ready_grants_dir.mkdir(exist_ok=True)
            
            temp_file_path = ready_grants_dir / uploaded_file.name
            
            with open(temp_file_path, "wb") as f:
                f.write(uploaded_file.getbuffer())
            
            selected_file_path = str(temp_file_path)
            selected_file_name = uploaded_file.name
            
            st.success(f"‚úÖ –§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω: {uploaded_file.name}")
            st.info(f"üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω –≤: {temp_file_path}")

# –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
st.markdown("---")
st.subheader("üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ")

admin_comment = st.text_area(
    "–î–æ–±–∞–≤—å—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π (–±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤–º–µ—Å—Ç–µ —Å —Ñ–∞–π–ª–æ–º):",
    value="üìÑ –ì–æ—Ç–æ–≤–∞—è –≥—Ä–∞–Ω—Ç–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –æ—Ç GrantService",
    height=100,
    help="–≠—Ç–æ—Ç —Ç–µ–∫—Å—Ç –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∫–∞–∫ –ø–æ–¥–ø–∏—Å—å –∫ –¥–æ–∫—É–º–µ–Ω—Ç—É"
)

# –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏
st.markdown("---")

if st.button("üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç –≤ Telegram", type="primary", use_container_width=True):
    if not (selected_file_path or selected_grant_id):
        st.error("‚ùå –í—ã–±–µ—Ä–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏!")
    elif not admin_comment.strip():
        st.error("‚ùå –î–æ–±–∞–≤—å—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ!")
    else:
        try:
            with st.spinner("üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç..."):
                # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
                document_data = {
                    'user_id': selected_user_id,
                    'file_path': selected_file_path,
                    'file_name': selected_file_name,
                    'admin_comment': admin_comment,
                    'admin_user': 'web-admin',  # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ä–µ–∞–ª—å–Ω–æ–µ –∏–º—è –∞–¥–º–∏–Ω–∞
                    'grant_application_id': selected_grant_id
                }
                
                # –ï—Å–ª–∏ —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –∏–∑–≤–µ—Å—Ç–µ–Ω, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ
                if selected_file_path and os.path.exists(selected_file_path):
                    document_data['file_size'] = os.path.getsize(selected_file_path)
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ–∫—É–º–µ–Ω—Ç–µ –≤ –ë–î
                document_id = db.save_sent_document(document_data)
                
                if document_id:
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —á–µ—Ä–µ–∑ Telegram
                    success, message = send_document_to_telegram(
                        user_id=selected_user_id,
                        file_path=selected_file_path,
                        caption=admin_comment,
                        grant_application_id=selected_grant_id
                    )
                    
                    if success:
                        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –ë–î
                        db.update_document_delivery_status(
                            document_id=document_id,
                            status='sent',
                            telegram_message_id=message.get('message_id')
                        )
                        
                        st.success("‚úÖ –î–æ–∫—É–º–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!")
                        st.balloons()
                        
                        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏
                        with st.expander("üìã –î–µ—Ç–∞–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏"):
                            st.json({
                                'recipient': selected_user_name,
                                'telegram_id': selected_user_id,
                                'file_name': selected_file_name,
                                'document_id': document_id,
                                'sent_at': datetime.now().isoformat(),
                                'status': 'sent'
                            })
                    else:
                        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –æ—à–∏–±–∫–∏ –≤ –ë–î
                        db.update_document_delivery_status(
                            document_id=document_id,
                            status='failed',
                            error_message=str(message)
                        )
                        
                        st.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {message}")
                else:
                    st.error("‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –¥–æ–∫—É–º–µ–Ω—Ç–µ")
                    
        except Exception as e:
            st.error(f"‚ùå –û—à–∏–±–∫–∞: {e}")
            st.error(f"–î–µ—Ç–∞–ª–∏: {traceback.format_exc()}")

# –ò—Å—Ç–æ—Ä–∏—è –æ—Ç–ø—Ä–∞–≤–æ–∫
st.markdown("---")
st.subheader("üìä –ò—Å—Ç–æ—Ä–∏—è –æ—Ç–ø—Ä–∞–≤–æ–∫")

if st.button("üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫"):
    st.cache_data.clear()

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
try:
    recent_documents = db.get_sent_documents(limit=10)
    
    if recent_documents:
        for doc in recent_documents:
            with st.container():
                col1, col2, col3, col4 = st.columns([2, 2, 1, 1])
                
                with col1:
                    st.text(f"üë§ {doc.get('first_name', '')} {doc.get('last_name', '')}")
                    if doc.get('username'):
                        st.caption(f"@{doc['username']}")
                
                with col2:
                    st.text(f"üìÑ {doc['file_name']}")
                    if doc.get('grant_title'):
                        st.caption(doc['grant_title'][:50] + "...")
                
                with col3:
                    status_emoji = {
                        'pending': '‚è≥',
                        'sent': '‚úÖ', 
                        'delivered': 'üì®',
                        'failed': '‚ùå'
                    }
                    st.text(f"{status_emoji.get(doc['delivery_status'], '‚ùì')} {doc['delivery_status']}")
                
                with col4:
                    st.caption(doc['sent_at'][:16])
                
                if doc.get('admin_comment'):
                    st.caption(f"üí¨ {doc['admin_comment'][:100]}...")
                
                st.divider()
    else:
        st.info("–ò—Å—Ç–æ—Ä–∏—è –æ—Ç–ø—Ä–∞–≤–æ–∫ –ø—É—Å—Ç–∞")
        
except Exception as e:
    st.error(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏: {e}")

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –ø–∞–Ω–µ–ª—å
with st.sidebar:
    st.subheader("‚ÑπÔ∏è –°–ø—Ä–∞–≤–∫–∞")
    
    st.markdown("""
    ### üì§ –ö–∞–∫ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≥—Ä–∞–Ω—Ç
    
    1. **–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç–µ–ª—è** –∏–∑ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    2. **–í—ã–±–µ—Ä–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç**:
       - –ì–æ—Ç–æ–≤—ã–π —Ñ–∞–π–ª –∏–∑ –ø–∞–ø–∫–∏
       - –≠–∫—Å–ø–æ—Ä—Ç –∏–∑ –∑–∞—è–≤–∫–∏
       - –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞
    3. **–î–æ–±–∞–≤—å—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π** –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    4. **–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –æ—Ç–ø—Ä–∞–≤–∫–∏**
    
    ### üìã –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã
    - PDF
    - DOCX, DOC
    - TXT
    
    ### üîç –°—Ç–∞—Ç—É—Å—ã –¥–æ—Å—Ç–∞–≤–∫–∏
    - ‚è≥ **pending** - –≤ –æ—á–µ—Ä–µ–¥–∏
    - ‚úÖ **sent** - –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ
    - üì® **delivered** - –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ
    - ‚ùå **failed** - –æ—à–∏–±–∫–∞
    """)
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    st.markdown("---")
    st.subheader("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
    
    try:
        total_users = len(get_users_list())
        total_apps = len(get_applications_list())
        total_files = len(get_ready_files())
        
        st.metric("üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", total_users)
        st.metric("üìÑ –ó–∞—è–≤–æ–∫", total_apps)
        st.metric("üóÇÔ∏è –ì–æ—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤", total_files)
        
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")